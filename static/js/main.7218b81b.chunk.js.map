{"version":3,"sources":["utils/index.js","components/Header.js","../../dist/index.modern.js","components/TableContentsList.js","components/TableContents.js","components/HashHeading.js","components/Example.js","components/LibName.js","components/ARIAPracticesLink.js","data/codeExamples.js","components/Usage.js","data/styleGuide.js","data/documentation.js","components/DocSection.js","components/Docs.js","components/StyleSection.js","components/StyleGuide.js","components/NotFound.js","components/PageContent.js","components/Footer.js","App.js","index.js"],"names":["bem","block","element","modifiers","blockElement","className","Object","keys","name","value","DomInfoContext","React","createContext","ToastContext","Header","memo","isFullSize","useContext","vWidth","id","aria-label","exact","to","title","href","src","alt","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","MenuListContext","hoverIndex","EventHandlersContext","RadioGroupContext","SettingsContext","KeyCodes","freeze","HoverIndexActionTypes","CloseReason","stylePropTypes","PropTypes","oneOfType","string","func","styles","object","menuPropTypesBase","number","animation","bool","debugging","align","oneOf","direction","children","node","isRequired","onClick","menuDefaultPropsBase","defineName","component","defineProperty","writable","safeCall","fn","_len","args","Array","_key","userClassName","userModifiers","_i2","_Object$keys2","trim","isObject","obj","flatStyles","style","_i3","_Object$keys3","prop","modifierValue","_i4","_Object$keys4","nestedProp","nestedValue","FocusPositions","MenuStates","MenuStateActionType","useMenuState","keepMounted","_useState","useState","position","INITIAL","menuItemFocus","setMenuItemFocus","_useReducer","useReducer","state","_ref","type","OPEN","CLOSE","CLOSED","UNMOUNTED","TOGGLE","Error","menuState","dispatch","isMounted","isOpen","openMenu","useCallback","closeMenu","toggleMenu","useActiveState","customKeyCode","active","setActive","activeKeyCodes","useMemo","SPACE","RETURN","concat","isActive","onPointerDown","e","currentTarget","setPointerCapture","pointerId","onPointerUp","releasePointerCapture","onLostPointerCapture","onKeyDown","includes","keyCode","onKeyUp","onBlur","MenuButton","forwardRef","ref","disabled","open","createElement","propTypes","MenuList","ariaLabel","anchorPoint","anchorRef","containerRef","isDisabled","onAnimationEnd","restProps","x","y","setPosition","_useState2","isClosing","setClosing","_useState3","expandedDirection","setExpandedDirection","menuRef","useRef","menuItemsCount","prevOpen","_ref2","index","RESET","SET","UNSET","DECREASE","current","INCREASE","_i","FIRST","LAST","hoverIndexDispatch","menuItems","permittedChildren","validateChildren","parent","child","permitted","__name__","console","warn","join","items","Children","map","_permittedChildren","props","radioItems","radioChild","cloneElement","positionHelpers","menuRect","getBoundingClientRect","containerRect","viewportWidth","document","documentElement","clientWidth","viewportHeight","clientHeight","getLeftOverflow","left","getRightOverflow","width","getTopOverflow","top","getBottomOverflow","height","confineHorizontally","rightOverflow","leftOverflow","confineVertically","bottomOverflow","topOverflow","useLayoutEffect","placeToporBottomX","newPosition","_positionHelpers","anchorRect","placeLeftX","placeRightX","right","placeLeftorRightY","placeTopY","placeBottomY","bottom","computedDirection","adjustedX","_rightOverflow","_adjustedX","_leftOverflow","adjustedY","_bottomOverflow","_adjustedY","_topOverflow","_positionHelpers2","useEffect","setTimeout","focus","clearTimeout","context","isParentOpen","closing","dir","Fragment","role","tabIndex","handled","HOME","END","UP","DOWN","contains","preventDefault","stopPropagation","Provider","useMenuList","menuListProps","onClose","skipClick","settings","eventHandlers","handleClick","event","isStopPropagation","isCheckorRadio","reason","CLICK","ESC","CANCEL","relatedTarget","BLUR","Menu","menuButton","onChange","_useMenuState","buttonRef","button","handleClose","detail","handleKeyDown","renderButton","buttonProps","menuList","defaultProps","ControlledMenu","SubMenu","menuClassName","menuStyles","label","_useActiveState","RIGHT","activeStateHandlers","_useContext","itemRef","timeoutId","isHovering","undefined","hover","LEFT","onMouseEnter","onMouseLeave","MenuItem","checked","radioGroup","isRadio","isCheckBox","isAnchor","anchor","menuItemProps","click","renderChildren","any","MenuDivider","MenuHeader","MenuRadioGroup","contextValue","TableContentsList","list","level","listElt","item","nested","smooth","TableContents","domInfo","navbarHeight","maxHeight","tocPosition","vHeight","HashHeading","heading","setHover","fontSize","setFontSize","getComputedStyle","getPropertyValue","Example","initialFullSource","data","desc","fullSource","setToast","isFullSource","setIsFullSource","sourceCode","sourceBtnTitle","$","find","each","_","hljs","highlightBlock","tooltip","aria-labelledby","data-toggle","data-placement","data-original-title","navigator","clipboard","writeText","then","catch","s","LibName","ARIAPracticesLink","rel","menuLink","menuItemLink","menuButtonLink","menuStateHookLink","styleGuideLink","basicMenu","subMenu","eventHandling","checkBox","headerAndDivider","combined","linkAndDisabled","iconAndImage","hoverAndActive","openStateButton","customisedButton","alignment","managingState","contextMenu","menuStateHook","stylesProp","classNameProp","menu","menuItem","menuPlacement","controlledMenu","customisedStyle","usageExamples","features","installation","Usage","GroupingSection","codeExamples","BasicMenuExample","SubmenuExample","EventHandlingExample","RadioGroupExample","CheckBoxExample","HeaderAndDividerExample","CombinedExample","LinkAndDisabledExample","IconAndImageExample","HoverAndActiveExample","OpenStateExample","CustomisedButtonExample","MenuDirectionExample","MenuAlignmentExample","ManagingStateExample","ContextMenuExample","MenuStateHookExample","StylesPropExample","ClassNamePropExample","text","setText","scrollTop","scrollHeight","t","readOnly","textColor","setTextColor","color","isBold","setBold","isItalic","setItalic","isUnderline","setUnderline","fontWeight","fontStyle","textDecoration","justifyContent","minWidth","menus","setOpen","setAnchorPoint","onContextMenu","clientX","clientY","menuProps","border","boxShadow","backgroundColor","controlledMenuLink","radioGroupLink","menuHeaderLink","menuModifiers","submenuModifiers","menuItemModifiers","onClickEventObject","keepMountedProp","defaultVal","menuChildrenProp","onChangeProp","styleProps","menuPropsBase","rows","submenu","menuHeader","menuDivider","menuRadioGroup","keyboard","DocSection","scope","sort","n1","n2","Docs","menuClass","modifier","menuItemClass","StyleSection","StyleGuide","NotFound","PageContent","location","useLocation","hash","window","scrollTo","path","Footer","App","setDomInfo","handleResize","info","querySelector","offsetHeight","addEventListener","removeEventListener","toast","basename","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7218b81b.chunk.js","sourcesContent":["import React from 'react';\n\nexport const bem = (block, element, modifiers = {}) => {\n    let blockElement = element ? `${block}__${element}` : block;\n    let className = blockElement;\n    for (const name of Object.keys(modifiers)) {\n        const value = modifiers[name];\n        if (value) {\n            className += ` ${blockElement}--`;\n            className += (value === true ? name : `${name}-${value}`);\n        }\n    }\n\n    return className;\n}\n\nexport const DomInfoContext = React.createContext({});\nexport const ToastContext = React.createContext(() => { });\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { DomInfoContext } from '../utils';\n\nexport const Header = React.memo(function Header() {\n\n    const isFullSize = useContext(DomInfoContext).vWidth > 450;\n\n    return (\n        <header id=\"header\" >\n            <nav className=\"navbar fixed-top navbar-expand navbar-dark bg-dark\"\n                aria-label=\"Site\">\n                <ul className=\"navbar-nav\">\n                    <li>\n                        <NavLink className=\"nav-link\" exact to=\"/\">Home</NavLink>\n                    </li>\n                    <li>\n                        <NavLink className=\"nav-link\" to=\"/docs\">\n                            {isFullSize ? 'Documentation' : 'Docs'}\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink className=\"nav-link\" to=\"/style-guide\">\n                            {isFullSize ? 'Style Guide' : 'Styling'}\n                        </NavLink>\n                    </li>\n                </ul>\n\n                <a className=\"github\" title=\"GitHub\" href=\"https://github.com/szhsin/react-menu\">\n                    <img src=\"GitHub-Mark-Light-64px.png\" alt=\"GitHub\" />\n                </a>\n            </nav>\n        </header>\n    );\n});\n","import React, { useState, useReducer, useCallback, useMemo, useContext, useRef, useLayoutEffect, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar menuContainerClass = 'rc-menu-container';\nvar menuClass = 'rc-menu';\nvar menuButtonClass = 'rc-menu-button';\nvar menuItemClass = 'item';\nvar menuDividerClass = 'divider';\nvar menuHeaderClass = 'header';\nvar subMenuClass = 'submenu';\nvar radioGroupClass = 'radio-group';\nvar initialHoverIndex = -1;\nvar MenuListContext = React.createContext({\n  hoverIndex: initialHoverIndex\n});\nvar EventHandlersContext = React.createContext({});\nvar RadioGroupContext = React.createContext({});\nvar SettingsContext = React.createContext({});\nvar KeyCodes = Object.freeze({\n  'RETURN': 13,\n  'ESC': 27,\n  'SPACE': 32,\n  'END': 35,\n  'HOME': 36,\n  'LEFT': 37,\n  'UP': 38,\n  'RIGHT': 39,\n  'DOWN': 40\n});\nvar HoverIndexActionTypes = Object.freeze({\n  'RESET': 0,\n  'SET': 1,\n  'UNSET': 2,\n  'INCREASE': 3,\n  'DECREASE': 4,\n  'FIRST': 5,\n  'LAST': 6\n});\nvar CloseReason = Object.freeze({\n  'CLICK': 'click',\n  'CANCEL': 'cancel',\n  'BLUR': 'blur'\n});\nvar stylePropTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  styles: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n};\nvar menuPropTypesBase = _extends({}, stylePropTypes, {\n  'aria-label': PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animation: PropTypes.bool,\n  debugging: PropTypes.bool,\n  align: PropTypes.oneOf(['start', 'center', 'end']),\n  direction: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func\n});\nvar menuDefaultPropsBase = {\n  animation: true,\n  align: 'start',\n  direction: 'bottom'\n};\n\nvar defineName = function defineName(component, name) {\n  return Object.defineProperty(component, '__name__', {\n    value: name,\n    writable: false\n  });\n};\nvar safeCall = function safeCall(fn) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return typeof fn === 'function' ? fn.apply(void 0, args) : fn;\n};\nvar bem = function bem(block, element, modifiers) {\n  if (modifiers === void 0) {\n    modifiers = {};\n  }\n\n  return function (userClassName, userModifiers) {\n    var blockElement = element ? block + \"__\" + element : block;\n    var className = blockElement;\n\n    for (var _i2 = 0, _Object$keys2 = Object.keys(modifiers); _i2 < _Object$keys2.length; _i2++) {\n      var name = _Object$keys2[_i2];\n      var value = modifiers[name];\n\n      if (value) {\n        className += \" \" + blockElement + \"--\";\n        className += value === true ? name : name + \"-\" + value;\n      }\n    }\n\n    if (typeof userClassName === 'function') {\n      userClassName = userClassName(userModifiers || modifiers);\n    }\n\n    if (typeof userClassName === 'string') {\n      userClassName = userClassName.trim();\n      if (userClassName) className += \" \" + userClassName;\n    }\n\n    return className;\n  };\n};\n\nvar isObject = function isObject(obj) {\n  return obj && typeof obj === 'object';\n};\n\nvar flatStyles = function flatStyles(styles, modifiers) {\n  if (typeof styles === 'function') return styles(modifiers);\n  if (!isObject(styles)) return undefined;\n  if (!modifiers) return styles;\n  var style = {};\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(styles); _i3 < _Object$keys3.length; _i3++) {\n    var prop = _Object$keys3[_i3];\n    var value = styles[prop];\n\n    if (isObject(value)) {\n      var modifierValue = modifiers[prop];\n\n      if (typeof modifierValue === 'string') {\n        for (var _i4 = 0, _Object$keys4 = Object.keys(value); _i4 < _Object$keys4.length; _i4++) {\n          var nestedProp = _Object$keys4[_i4];\n          var nestedValue = value[nestedProp];\n\n          if (isObject(nestedValue)) {\n            if (nestedProp === modifierValue) {\n              Object.assign(style, nestedValue);\n            }\n          } else {\n            style[nestedProp] = nestedValue;\n          }\n        }\n      } else if (modifierValue) {\n        Object.assign(style, value);\n      }\n    } else {\n      style[prop] = value;\n    }\n  }\n\n  return style;\n};\n\nvar FocusPositions = Object.freeze({\n  'INITIAL': 'initial',\n  'FIRST': 'first',\n  'LAST': 'last'\n});\nvar MenuStates = Object.freeze({\n  'UNMOUNTED': 0,\n  'CLOSED': 1,\n  'OPEN': 2\n});\nvar MenuStateActionType = Object.freeze({\n  'OPEN': 0,\n  'CLOSE': 1,\n  'TOGGLE': 2\n});\nvar useMenuState = function useMenuState(keepMounted) {\n  if (keepMounted === void 0) {\n    keepMounted = true;\n  }\n\n  var _useState = useState({\n    position: FocusPositions.INITIAL\n  }),\n      menuItemFocus = _useState[0],\n      setMenuItemFocus = _useState[1];\n\n  var _useReducer = useReducer(menuStateReducer, MenuStates.UNMOUNTED),\n      menuState = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  function menuStateReducer(state, _ref) {\n    var type = _ref.type;\n\n    switch (type) {\n      case MenuStateActionType.OPEN:\n        return MenuStates.OPEN;\n\n      case MenuStateActionType.CLOSE:\n        if (state === MenuStates.OPEN) {\n          return keepMounted ? MenuStates.CLOSED : MenuStates.UNMOUNTED;\n        } else {\n          return state;\n        }\n\n      case MenuStateActionType.TOGGLE:\n        if (state === MenuStates.OPEN) {\n          return keepMounted ? MenuStates.CLOSED : MenuStates.UNMOUNTED;\n        } else {\n          return MenuStates.OPEN;\n        }\n\n      default:\n        throw new Error('menuStateReducer: unknown action type');\n    }\n  }\n\n  return {\n    isMounted: menuState !== MenuStates.UNMOUNTED,\n    isOpen: menuState === MenuStates.OPEN,\n    menuItemFocus: menuItemFocus,\n    openMenu: useCallback(function (menuItemFocus) {\n      if (menuItemFocus === void 0) {\n        menuItemFocus = FocusPositions.INITIAL;\n      }\n\n      setMenuItemFocus({\n        position: menuItemFocus\n      });\n      dispatch({\n        type: MenuStateActionType.OPEN\n      });\n    }, []),\n    closeMenu: useCallback(function () {\n      return dispatch({\n        type: MenuStateActionType.CLOSE\n      });\n    }, []),\n    toggleMenu: useCallback(function (menuItemFocus) {\n      if (menuItemFocus === void 0) {\n        menuItemFocus = FocusPositions.INITIAL;\n      }\n\n      setMenuItemFocus({\n        position: menuItemFocus\n      });\n      dispatch({\n        type: MenuStateActionType.TOGGLE\n      });\n    }, [])\n  };\n};\n\nvar useActiveState = function useActiveState(customKeyCode) {\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var activeKeyCodes = useMemo(function () {\n    return [KeyCodes.SPACE, KeyCodes.RETURN].concat(customKeyCode ? [customKeyCode] : []);\n  }, [customKeyCode]);\n  return {\n    isActive: active,\n    onPointerDown: useCallback(function (e) {\n      e.currentTarget.setPointerCapture(e.pointerId);\n      setActive(true);\n    }, []),\n    onPointerUp: useCallback(function (e) {\n      e.currentTarget.releasePointerCapture(e.pointerId);\n    }, []),\n    onLostPointerCapture: useCallback(function (e) {\n      setActive(false);\n    }, []),\n    onKeyDown: useCallback(function (e) {\n      if (activeKeyCodes.includes(e.keyCode)) {\n        setActive(true);\n      }\n    }, [activeKeyCodes]),\n    onKeyUp: useCallback(function (e) {\n      if (activeKeyCodes.includes(e.keyCode)) {\n        setActive(false);\n      }\n    }, [activeKeyCodes]),\n    onBlur: useCallback(function (e) {\n      setActive(false);\n    }, [])\n  };\n};\n\nvar MenuButton = defineName(React.memo(React.forwardRef(function MenuButton(_ref, ref) {\n  var id = _ref.id,\n      className = _ref.className,\n      styles = _ref.styles,\n      isOpen = _ref.isOpen,\n      disabled = _ref.disabled,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      onKeyDown = _ref.onKeyDown;\n  var modifiers = Object.freeze({\n    open: isOpen\n  });\n  return /*#__PURE__*/React.createElement(\"button\", {\n    id: id,\n    className: bem(menuButtonClass, null, modifiers)(className),\n    style: flatStyles(styles, modifiers),\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": isOpen,\n    \"aria-disabled\": disabled,\n    ref: ref,\n    disabled: disabled,\n    onClick: onClick,\n    onKeyDown: onKeyDown\n  }, children);\n})), 'MenuButton');\nMenuButton.propTypes = _extends({}, stylePropTypes, {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isOpen: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  onKeyDown: PropTypes.func\n});\n\nvar MenuList = defineName(React.memo(function MenuList(_ref) {\n  var ariaLabel = _ref.ariaLabel,\n      className = _ref.className,\n      styles = _ref.styles,\n      anchorPoint = _ref.anchorPoint,\n      anchorRef = _ref.anchorRef,\n      containerRef = _ref.containerRef,\n      align = _ref.align,\n      direction = _ref.direction,\n      isOpen = _ref.isOpen,\n      isMounted = _ref.isMounted,\n      isDisabled = _ref.isDisabled,\n      menuItemFocus = _ref.menuItemFocus,\n      children = _ref.children,\n      onKeyDown = _ref.onKeyDown,\n      onAnimationEnd = _ref.onAnimationEnd,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"ariaLabel\", \"className\", \"styles\", \"anchorPoint\", \"anchorRef\", \"containerRef\", \"align\", \"direction\", \"isOpen\", \"isMounted\", \"isDisabled\", \"menuItemFocus\", \"children\", \"onKeyDown\", \"onAnimationEnd\"]);\n\n  var _useState = useState({\n    x: 0,\n    y: 0\n  }),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var _useState2 = useState(false),\n      isClosing = _useState2[0],\n      setClosing = _useState2[1];\n\n  var _useState3 = useState(direction),\n      expandedDirection = _useState3[0],\n      setExpandedDirection = _useState3[1];\n\n  var _useContext = useContext(SettingsContext),\n      animation = _useContext.animation;\n\n  var menuRef = useRef(null);\n  var menuItemsCount = useRef(0);\n  var prevOpen = useRef(isOpen);\n\n  var _useReducer = useReducer(hoverIndexReducer, initialHoverIndex),\n      hoverIndex = _useReducer[0],\n      hoverIndexDispatch = _useReducer[1];\n\n  function hoverIndexReducer(state, _ref2) {\n    var type = _ref2.type,\n        index = _ref2.index;\n\n    switch (type) {\n      case HoverIndexActionTypes.RESET:\n        return initialHoverIndex;\n\n      case HoverIndexActionTypes.SET:\n        return index;\n\n      case HoverIndexActionTypes.UNSET:\n        return state === index ? initialHoverIndex : state;\n\n      case HoverIndexActionTypes.DECREASE:\n        {\n          var i = state;\n          i--;\n          if (i < 0) i = menuItemsCount.current - 1;\n          return i;\n        }\n\n      case HoverIndexActionTypes.INCREASE:\n        {\n          var _i = state;\n          _i++;\n          if (_i >= menuItemsCount.current) _i = 0;\n          return _i;\n        }\n\n      case HoverIndexActionTypes.FIRST:\n        return menuItemsCount.current > 0 ? 0 : initialHoverIndex;\n\n      case HoverIndexActionTypes.LAST:\n        return menuItemsCount.current > 0 ? menuItemsCount.current - 1 : initialHoverIndex;\n\n      default:\n        throw new Error('hoverIndexReducer: unknown action type');\n    }\n  }\n\n  var menuItems = useMemo(function () {\n    if (!isMounted) return null;\n    var index = 0;\n    var permittedChildren = ['MenuDivider', 'MenuHeader', 'MenuItem', 'MenuRadioGroup', 'SubMenu'];\n\n    var validateChildren = function validateChildren(parent, child, permitted) {\n      if (!permitted.includes(child.type && child.type.__name__)) {\n        console.warn((child.type || child) + \" is ignored.\\n\", \"The permitted children inside a \" + parent + \" are \" + permitted.join(', ') + \".\");\n        return false;\n      }\n\n      return true;\n    };\n\n    var items = React.Children.map(children, function (child) {\n      if (!validateChildren('Menu or SubMenu', child, permittedChildren)) return null;\n\n      if (child.type.__name__ === 'MenuDivider' || child.type.__name__ === 'MenuHeader') {\n        return child;\n      } else if (child.type.__name__ === 'MenuRadioGroup') {\n        var _permittedChildren = ['MenuItem'];\n        var props = {\n          type: 'radio'\n        };\n        var radioItems = React.Children.map(child.props.children, function (radioChild) {\n          if (!validateChildren('MenuRadioGroup', radioChild, _permittedChildren)) return null;\n          return radioChild.props.disabled ? React.cloneElement(radioChild, props) : React.cloneElement(radioChild, _extends({}, props, {\n            index: index++\n          }));\n        });\n        return React.cloneElement(child, {\n          children: radioItems\n        });\n      } else {\n        return child.props.disabled ? child : React.cloneElement(child, {\n          index: index++\n        });\n      }\n    });\n    menuItemsCount.current = index;\n    return items;\n  }, [isMounted, children]);\n\n  var handleKeyDown = function handleKeyDown(e) {\n    var handled = false;\n\n    switch (e.keyCode) {\n      case KeyCodes.HOME:\n        hoverIndexDispatch({\n          type: HoverIndexActionTypes.FIRST\n        });\n        handled = true;\n        break;\n\n      case KeyCodes.END:\n        hoverIndexDispatch({\n          type: HoverIndexActionTypes.LAST\n        });\n        handled = true;\n        break;\n\n      case KeyCodes.UP:\n        hoverIndexDispatch({\n          type: HoverIndexActionTypes.DECREASE\n        });\n        handled = true;\n        break;\n\n      case KeyCodes.DOWN:\n        hoverIndexDispatch({\n          type: HoverIndexActionTypes.INCREASE\n        });\n        handled = true;\n        break;\n\n      case KeyCodes.SPACE:\n      case KeyCodes.RETURN:\n        if (e.currentTarget.contains(e.target)) e.preventDefault();\n        break;\n    }\n\n    if (handled) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    safeCall(onKeyDown, e);\n  };\n\n  var handleAnimationEnd = function handleAnimationEnd(e) {\n    if (isClosing) setClosing(false);\n    safeCall(onAnimationEnd, e);\n  };\n\n  var positionHelpers = useCallback(function () {\n    var menuRect = menuRef.current.getBoundingClientRect();\n    var containerRect = containerRef.current.getBoundingClientRect();\n    var viewportWidth = document.documentElement.clientWidth;\n    var viewportHeight = document.documentElement.clientHeight;\n\n    var getLeftOverflow = function getLeftOverflow(x) {\n      return containerRect.left + x;\n    };\n\n    var getRightOverflow = function getRightOverflow(x) {\n      return containerRect.left + x + menuRect.width - viewportWidth;\n    };\n\n    var getTopOverflow = function getTopOverflow(y) {\n      return containerRect.top + y;\n    };\n\n    var getBottomOverflow = function getBottomOverflow(y) {\n      return containerRect.top + y + menuRect.height - viewportHeight;\n    };\n\n    var confineHorizontally = function confineHorizontally(x) {\n      var rightOverflow = getRightOverflow(x);\n\n      if (rightOverflow > 0) {\n        x -= rightOverflow;\n      } else {\n        var leftOverflow = getLeftOverflow(x);\n\n        if (leftOverflow < 0) {\n          x -= leftOverflow;\n        }\n      }\n\n      return x;\n    };\n\n    var confineVertically = function confineVertically(y) {\n      var bottomOverflow = getBottomOverflow(y);\n\n      if (bottomOverflow > 0) {\n        y -= bottomOverflow;\n      } else {\n        var topOverflow = getTopOverflow(y);\n\n        if (topOverflow < 0) {\n          y -= topOverflow;\n        }\n      }\n\n      return y;\n    };\n\n    return {\n      menuRect: menuRect,\n      containerRect: containerRect,\n      viewportWidth: viewportWidth,\n      viewportHeight: viewportHeight,\n      getLeftOverflow: getLeftOverflow,\n      getRightOverflow: getRightOverflow,\n      getTopOverflow: getTopOverflow,\n      getBottomOverflow: getBottomOverflow,\n      confineHorizontally: confineHorizontally,\n      confineVertically: confineVertically\n    };\n  }, [containerRef]);\n  useLayoutEffect(function () {\n    if (!isOpen || anchorPoint || !anchorRef) return;\n\n    var _positionHelpers = positionHelpers(),\n        menuRect = _positionHelpers.menuRect,\n        containerRect = _positionHelpers.containerRect,\n        getLeftOverflow = _positionHelpers.getLeftOverflow,\n        getRightOverflow = _positionHelpers.getRightOverflow,\n        getTopOverflow = _positionHelpers.getTopOverflow,\n        getBottomOverflow = _positionHelpers.getBottomOverflow,\n        confineHorizontally = _positionHelpers.confineHorizontally,\n        confineVertically = _positionHelpers.confineVertically;\n\n    var anchorRect = anchorRef.current.getBoundingClientRect();\n    var placeLeftX = anchorRect.left - containerRect.left - menuRect.width;\n    var placeRightX = anchorRect.right - containerRect.left;\n    var placeLeftorRightY = anchorRect.top - containerRect.top;\n    var placeTopY = anchorRect.top - containerRect.top - menuRect.height;\n    var placeBottomY = anchorRect.bottom - containerRect.top;\n    var placeToporBottomX;\n\n    if (align === 'end') {\n      placeToporBottomX = anchorRect.right - containerRect.left - menuRect.width;\n    } else if (align === 'center') {\n      placeToporBottomX = anchorRect.left - containerRect.left - (menuRect.width - anchorRect.width) / 2;\n    } else {\n      placeToporBottomX = anchorRect.left - containerRect.left;\n    }\n\n    var newPosition, x, y;\n    var computedDirection = direction;\n\n    switch (direction) {\n      case 'left':\n        {\n          x = placeLeftX;\n          y = placeLeftorRightY;\n          y = confineVertically(y);\n          var leftOverflow = getLeftOverflow(x);\n\n          if (leftOverflow < 0) {\n            var adjustedX = placeRightX;\n            var rightOverflow = getRightOverflow(adjustedX);\n\n            if (rightOverflow > 0) {\n              if (-leftOverflow > rightOverflow) {\n                adjustedX -= rightOverflow;\n                x = adjustedX;\n                computedDirection = 'right';\n              } else {\n                x -= leftOverflow;\n              }\n            } else {\n              x = adjustedX;\n              computedDirection = 'right';\n            }\n          }\n\n          newPosition = {\n            x: x,\n            y: y\n          };\n        }\n        break;\n\n      case 'right':\n        {\n          x = placeRightX;\n          y = placeLeftorRightY;\n          y = confineVertically(y);\n\n          var _rightOverflow = getRightOverflow(x);\n\n          if (_rightOverflow > 0) {\n            var _adjustedX = placeLeftX;\n\n            var _leftOverflow = getLeftOverflow(_adjustedX);\n\n            if (_leftOverflow < 0) {\n              if (-_leftOverflow < _rightOverflow) {\n                _adjustedX -= _leftOverflow;\n                x = _adjustedX;\n                computedDirection = 'left';\n              } else {\n                x -= _rightOverflow;\n              }\n            } else {\n              x = _adjustedX;\n              computedDirection = 'left';\n            }\n          }\n\n          newPosition = {\n            x: x,\n            y: y\n          };\n        }\n        break;\n\n      case 'top':\n        {\n          x = placeToporBottomX;\n          y = placeTopY;\n          x = confineHorizontally(x);\n          var topOverflow = getTopOverflow(y);\n\n          if (topOverflow < 0) {\n            var adjustedY = placeBottomY;\n            var bottomOverflow = getBottomOverflow(adjustedY);\n\n            if (bottomOverflow > 0) {\n              if (-topOverflow > bottomOverflow) {\n                adjustedY -= bottomOverflow;\n                y = adjustedY;\n                computedDirection = 'bottom';\n              } else {\n                y -= topOverflow;\n              }\n            } else {\n              y = adjustedY;\n              computedDirection = 'bottom';\n            }\n          }\n\n          newPosition = {\n            x: x,\n            y: y\n          };\n        }\n        break;\n\n      case 'bottom':\n      default:\n        {\n          computedDirection = 'bottom';\n          x = placeToporBottomX;\n          y = placeBottomY;\n          x = confineHorizontally(x);\n\n          var _bottomOverflow = getBottomOverflow(y);\n\n          if (_bottomOverflow > 0) {\n            var _adjustedY = placeTopY;\n\n            var _topOverflow = getTopOverflow(_adjustedY);\n\n            if (_topOverflow < 0) {\n              if (-_topOverflow < _bottomOverflow) {\n                _adjustedY -= _topOverflow;\n                y = _adjustedY;\n                computedDirection = 'top';\n              } else {\n                y -= _bottomOverflow;\n              }\n            } else {\n              y = _adjustedY;\n              computedDirection = 'top';\n            }\n          }\n\n          newPosition = {\n            x: x,\n            y: y\n          };\n        }\n        break;\n    }\n\n    setPosition(newPosition);\n    setExpandedDirection(computedDirection);\n  }, [isOpen, anchorPoint, anchorRef, positionHelpers, align, direction]);\n  useLayoutEffect(function () {\n    if (!isOpen || !anchorPoint) return;\n\n    var _positionHelpers2 = positionHelpers(),\n        menuRect = _positionHelpers2.menuRect,\n        containerRect = _positionHelpers2.containerRect,\n        getLeftOverflow = _positionHelpers2.getLeftOverflow,\n        getRightOverflow = _positionHelpers2.getRightOverflow,\n        getTopOverflow = _positionHelpers2.getTopOverflow,\n        getBottomOverflow = _positionHelpers2.getBottomOverflow;\n\n    var x, y;\n    x = anchorPoint.x - containerRect.left;\n    y = anchorPoint.y - containerRect.top;\n    var rightOverflow = getRightOverflow(x);\n\n    if (rightOverflow > 0) {\n      var adjustedX = x - menuRect.width;\n      var leftOverflow = getLeftOverflow(adjustedX);\n\n      if (leftOverflow < 0) {\n        x -= rightOverflow;\n      } else {\n        x = adjustedX;\n      }\n    }\n\n    var computedDirection = 'bottom';\n    var bottomOverflow = getBottomOverflow(y);\n\n    if (bottomOverflow > 0) {\n      computedDirection = 'top';\n      var adjustedY = y - menuRect.height;\n      var topOverflow = getTopOverflow(adjustedY);\n\n      if (topOverflow < 0) {\n        y -= bottomOverflow;\n      } else {\n        y = adjustedY;\n      }\n    }\n\n    setPosition({\n      x: x,\n      y: y\n    });\n    setExpandedDirection(computedDirection);\n  }, [isOpen, anchorPoint, positionHelpers]);\n  useLayoutEffect(function () {\n    if (animation && isMounted) {\n      if (isOpen) {\n        setClosing(false);\n      } else if (isOpen !== prevOpen.current) {\n        setClosing(true);\n      }\n    }\n\n    prevOpen.current = isOpen;\n  }, [animation, isMounted, isOpen]);\n  useEffect(function () {\n    if (!isOpen) hoverIndexDispatch({\n      type: HoverIndexActionTypes.RESET\n    });\n    var id = setTimeout(function () {\n      if (!isOpen) return;\n      menuRef.current.focus();\n\n      if (menuItemFocus.position === FocusPositions.FIRST) {\n        hoverIndexDispatch({\n          type: HoverIndexActionTypes.FIRST\n        });\n      } else if (menuItemFocus.position === FocusPositions.LAST) {\n        hoverIndexDispatch({\n          type: HoverIndexActionTypes.LAST\n        });\n      }\n    }, 100);\n    return function () {\n      return clearTimeout(id);\n    };\n  }, [isOpen, menuItemFocus]);\n  var context = useMemo(function () {\n    return {\n      isParentOpen: isOpen,\n      hoverIndex: hoverIndex,\n      hoverIndexDispatch: hoverIndexDispatch\n    };\n  }, [isOpen, hoverIndex]);\n  var modifiers = {\n    open: isOpen,\n    closing: isClosing,\n    animation: animation,\n    dir: animation && expandedDirection\n  };\n  var userModifiers = Object.freeze(_extends({}, modifiers, {\n    dir: expandedDirection\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isMounted && /*#__PURE__*/React.createElement(\"ul\", _extends({}, restProps, {\n    className: bem(menuClass, null, modifiers)(className, userModifiers),\n    role: \"menu\",\n    tabIndex: \"-1\",\n    \"aria-disabled\": isDisabled,\n    \"aria-label\": ariaLabel,\n    ref: menuRef,\n    onKeyDown: handleKeyDown,\n    onAnimationEnd: handleAnimationEnd,\n    style: _extends({}, flatStyles(styles, userModifiers), {\n      left: position.x + \"px\",\n      top: position.y + \"px\"\n    })\n  }), /*#__PURE__*/React.createElement(MenuListContext.Provider, {\n    value: context\n  }, menuItems)));\n}), 'MenuList');\n\nvar useMenuList = function useMenuList(menuListProps, id, animation, debugging, children, onClick, onClose, skipClick) {\n  var containerRef = useRef(null);\n  var settings = useMemo(function () {\n    return {\n      animation: animation,\n      debugging: debugging\n    };\n  }, [animation, debugging]);\n  var eventHandlers = useMemo(function () {\n    return {\n      handleClick: function handleClick(event, isStopPropagation, isCheckorRadio) {\n        if (!isCheckorRadio || event.keyCode !== KeyCodes.SPACE) {\n          safeCall(onClose, {\n            keyCode: event.keyCode,\n            reason: CloseReason.CLICK\n          });\n        }\n\n        if (!isStopPropagation) safeCall(onClick, event);\n      }\n    };\n  }, [onClick, onClose]);\n\n  var handleKeyDown = function handleKeyDown(_ref) {\n    var keyCode = _ref.keyCode;\n\n    switch (keyCode) {\n      case KeyCodes.ESC:\n        safeCall(onClose, {\n          keyCode: keyCode,\n          reason: CloseReason.CANCEL\n        });\n        break;\n    }\n  };\n\n  var handleBlur = function handleBlur(e) {\n    if (menuListProps.isOpen && !e.currentTarget.contains(e.relatedTarget) && !debugging) {\n      safeCall(onClose, {\n        reason: CloseReason.BLUR\n      });\n\n      if (skipClick) {\n        skipClick.current = true;\n        setTimeout(function () {\n          return skipClick.current = false;\n        }, 300);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: bem(menuContainerClass)(),\n    role: \"presentation\",\n    ref: containerRef,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur\n  }, /*#__PURE__*/React.createElement(SettingsContext.Provider, {\n    value: settings\n  }, /*#__PURE__*/React.createElement(EventHandlersContext.Provider, {\n    value: eventHandlers\n  }, /*#__PURE__*/React.createElement(MenuList, _extends({}, menuListProps, {\n    containerRef: containerRef\n  }), children))));\n};\n\nvar Menu = React.memo(function Menu(_ref) {\n  var ariaLabel = _ref['aria-label'],\n      id = _ref.id,\n      className = _ref.className,\n      styles = _ref.styles,\n      animation = _ref.animation,\n      debugging = _ref.debugging,\n      keepMounted = _ref.keepMounted,\n      align = _ref.align,\n      direction = _ref.direction,\n      menuButton = _ref.menuButton,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange;\n\n  var _useMenuState = useMenuState(keepMounted),\n      isMounted = _useMenuState.isMounted,\n      isOpen = _useMenuState.isOpen,\n      menuItemFocus = _useMenuState.menuItemFocus,\n      openMenu = _useMenuState.openMenu,\n      closeMenu = _useMenuState.closeMenu;\n\n  var skipClick = useRef(false);\n  var buttonRef = useRef(null);\n  var button = safeCall(menuButton, {\n    open: isOpen\n  });\n  if (!button) throw new Error('Menu requires a menuButton prop.');\n  var handleClose = useCallback(function (e) {\n    closeMenu();\n    if (e.keyCode) buttonRef.current.focus();\n  }, [closeMenu]);\n  var handleClick = useCallback(function (e) {\n    if (skipClick.current) return;\n    openMenu(e.detail === 0 ? FocusPositions.FIRST : FocusPositions.INITIAL);\n  }, [openMenu]);\n  var handleKeyDown = useCallback(function (e) {\n    var handled = false;\n\n    switch (e.keyCode) {\n      case KeyCodes.UP:\n        openMenu(FocusPositions.LAST);\n        handled = true;\n        break;\n\n      case KeyCodes.DOWN:\n        openMenu(FocusPositions.FIRST);\n        handled = true;\n        break;\n    }\n\n    if (handled) e.preventDefault();\n  }, [openMenu]);\n  var renderButton = useMemo(function () {\n    if (!button) return null;\n    var buttonProps = {\n      ref: buttonRef,\n      onClick: handleClick,\n      onKeyDown: handleKeyDown\n    };\n\n    if (button.type.__name__ === 'MenuButton') {\n      buttonProps.isOpen = isOpen;\n    }\n\n    return React.cloneElement(button, buttonProps);\n  }, [button, isOpen, handleClick, handleKeyDown]);\n  var menuList = useMenuList({\n    ariaLabel: ariaLabel || (typeof button.props.children === 'string' ? button.props.children : 'Menu'),\n    className: className,\n    styles: styles,\n    anchorRef: buttonRef,\n    align: align,\n    direction: direction,\n    isOpen: isOpen,\n    isMounted: isMounted,\n    menuItemFocus: menuItemFocus\n  }, id, animation, debugging, children, onClick, handleClose, skipClick);\n  useEffect(function () {\n    safeCall(onChange, {\n      open: isOpen\n    });\n  }, [onChange, isOpen]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderButton, menuList);\n});\nMenu.propTypes = _extends({}, menuPropTypesBase, {\n  keepMounted: PropTypes.bool,\n  menuButton: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired,\n  onChange: PropTypes.func\n});\nMenu.defaultProps = _extends({}, menuDefaultPropsBase, {\n  keepMounted: true\n});\n\nvar ControlledMenu = React.memo(function ControlledMenu(_ref) {\n  var ariaLabel = _ref['aria-label'],\n      id = _ref.id,\n      className = _ref.className,\n      styles = _ref.styles,\n      animation = _ref.animation,\n      debugging = _ref.debugging,\n      anchorPoint = _ref.anchorPoint,\n      anchorRef = _ref.anchorRef,\n      align = _ref.align,\n      direction = _ref.direction,\n      isOpen = _ref.isOpen,\n      isMounted = _ref.isMounted,\n      menuItemFocus = _ref.menuItemFocus,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      onClose = _ref.onClose,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"aria-label\", \"id\", \"className\", \"styles\", \"animation\", \"debugging\", \"anchorPoint\", \"anchorRef\", \"align\", \"direction\", \"isOpen\", \"isMounted\", \"menuItemFocus\", \"children\", \"onClick\", \"onClose\"]);\n\n  return useMenuList(_extends({}, restProps, {\n    ariaLabel: ariaLabel || 'Menu',\n    className: className,\n    styles: styles,\n    anchorPoint: anchorPoint,\n    anchorRef: anchorRef,\n    align: align,\n    direction: direction,\n    isOpen: isOpen,\n    isMounted: isMounted,\n    menuItemFocus: menuItemFocus\n  }), id, animation, debugging, children, onClick, onClose);\n});\nControlledMenu.propTypes = _extends({}, menuPropTypesBase, {\n  anchorPoint: PropTypes.exact({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }),\n  anchorRef: PropTypes.object,\n  isOpen: PropTypes.bool,\n  isMounted: PropTypes.bool,\n  menuItemFocus: PropTypes.exact({\n    position: PropTypes.string\n  }),\n  onClose: PropTypes.func\n});\nControlledMenu.defaultProps = _extends({}, menuDefaultPropsBase, {\n  isMounted: true,\n  menuItemFocus: {\n    position: FocusPositions.INITIAL\n  }\n});\n\nvar SubMenu = defineName(React.memo(function SubMenu(_ref) {\n  var ariaLabel = _ref['aria-label'],\n      className = _ref.className,\n      menuClassName = _ref.menuClassName,\n      styles = _ref.styles,\n      menuStyles = _ref.menuStyles,\n      disabled = _ref.disabled,\n      keepMounted = _ref.keepMounted,\n      label = _ref.label,\n      index = _ref.index,\n      children = _ref.children,\n      onChange = _ref.onChange;\n\n  var _useMenuState = useMenuState(keepMounted),\n      isMounted = _useMenuState.isMounted,\n      isOpen = _useMenuState.isOpen,\n      menuItemFocus = _useMenuState.menuItemFocus,\n      openMenu = _useMenuState.openMenu,\n      closeMenu = _useMenuState.closeMenu;\n\n  var _useActiveState = useActiveState(KeyCodes.RIGHT),\n      isActive = _useActiveState.isActive,\n      onKeyUp = _useActiveState.onKeyUp,\n      onBlur = _useActiveState.onBlur,\n      activeStateHandlers = _objectWithoutPropertiesLoose(_useActiveState, [\"isActive\", \"onKeyUp\", \"onBlur\"]);\n\n  var _useContext = useContext(MenuListContext),\n      isParentOpen = _useContext.isParentOpen,\n      hoverIndex = _useContext.hoverIndex,\n      hoverIndexDispatch = _useContext.hoverIndexDispatch;\n\n  var _useContext2 = useContext(SettingsContext),\n      debugging = _useContext2.debugging;\n\n  var containerRef = useRef(null);\n  var itemRef = useRef(null);\n  var timeoutId = useRef();\n  var isHovering = hoverIndex === index;\n  var isDisabled = disabled ? true : undefined;\n\n  var handleMouseEnter = function handleMouseEnter(e) {\n    if (isDisabled) return;\n    hoverIndexDispatch({\n      type: HoverIndexActionTypes.SET,\n      index: index\n    });\n    timeoutId.current = setTimeout(function () {\n      timeoutId.current = null;\n      openMenu();\n    }, 300);\n  };\n\n  var handleMouseLeave = function handleMouseLeave(e) {\n    clearTimeout(timeoutId.current);\n  };\n\n  var handleClick = function handleClick(e) {\n    if (isDisabled) return;\n    openMenu();\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    var handled = false;\n\n    switch (e.keyCode) {\n      case KeyCodes.LEFT:\n        if (isOpen) {\n          closeMenu();\n          itemRef.current.focus();\n          handled = true;\n        }\n\n        break;\n\n      case KeyCodes.RIGHT:\n        if (!isOpen) handled = true;\n        break;\n    }\n\n    if (handled) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(e) {\n    if (!isActive) return;\n    onKeyUp(e);\n\n    switch (e.keyCode) {\n      case KeyCodes.SPACE:\n      case KeyCodes.RETURN:\n      case KeyCodes.RIGHT:\n        openMenu(FocusPositions.FIRST);\n        break;\n    }\n  };\n\n  var handleBlur = function handleBlur(e) {\n    onBlur(e);\n    if (debugging) return;\n\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      closeMenu();\n      hoverIndexDispatch({\n        type: HoverIndexActionTypes.UNSET,\n        index: index\n      });\n    } else if (itemRef.current === e.relatedTarget) {\n      closeMenu();\n    }\n  };\n\n  useEffect(function () {\n    if (isHovering && isParentOpen) {\n      itemRef.current.focus();\n    } else {\n      closeMenu();\n    }\n  }, [isHovering, isParentOpen, closeMenu]);\n  useEffect(function () {\n    safeCall(onChange, {\n      open: isOpen\n    });\n  }, [onChange, isOpen]);\n  var modifiers = Object.freeze({\n    open: isOpen,\n    hover: isHovering,\n    active: isActive && !isDisabled,\n    disabled: isDisabled\n  });\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: bem(menuClass, subMenuClass)(),\n    role: \"presentation\",\n    ref: containerRef,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: bem(menuClass, menuItemClass, modifiers)(className),\n    style: flatStyles(styles, modifiers),\n    role: \"menuitem\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": isOpen,\n    \"aria-disabled\": isDisabled,\n    tabIndex: isHovering && !isOpen ? 0 : -1,\n    ref: itemRef,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp\n  }, activeStateHandlers), safeCall(label, modifiers)), /*#__PURE__*/React.createElement(MenuList, {\n    ariaLabel: ariaLabel || (typeof label === 'string' ? label : 'Submenu'),\n    className: menuClassName,\n    styles: menuStyles,\n    anchorRef: itemRef,\n    containerRef: containerRef,\n    direction: 'right',\n    isOpen: isOpen,\n    isMounted: isMounted,\n    isDisabled: isDisabled,\n    menuItemFocus: menuItemFocus\n  }, children));\n}), 'SubMenu');\nSubMenu.propTypes = _extends({}, stylePropTypes, {\n  'aria-label': PropTypes.string,\n  menuClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  menuStyles: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  disabled: PropTypes.bool,\n  keepMounted: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  children: PropTypes.node.isRequired,\n  onChange: PropTypes.func\n});\nSubMenu.defaultProps = {\n  keepMounted: true\n};\n\nvar MenuItem = defineName(React.memo(function MenuItem(_ref) {\n  var className = _ref.className,\n      styles = _ref.styles,\n      value = _ref.value,\n      href = _ref.href,\n      type = _ref.type,\n      checked = _ref.checked,\n      disabled = _ref.disabled,\n      index = _ref.index,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"className\", \"styles\", \"value\", \"href\", \"type\", \"checked\", \"disabled\", \"index\", \"children\", \"onClick\"]);\n\n  var itemRef = useRef(null);\n\n  var _useContext = useContext(MenuListContext),\n      isParentOpen = _useContext.isParentOpen,\n      hoverIndex = _useContext.hoverIndex,\n      hoverIndexDispatch = _useContext.hoverIndexDispatch;\n\n  var eventHandlers = useContext(EventHandlersContext);\n  var radioGroup = useContext(RadioGroupContext);\n\n  var _useActiveState = useActiveState(),\n      isActive = _useActiveState.isActive,\n      onKeyUp = _useActiveState.onKeyUp,\n      onBlur = _useActiveState.onBlur,\n      activeStateHandlers = _objectWithoutPropertiesLoose(_useActiveState, [\"isActive\", \"onKeyUp\", \"onBlur\"]);\n\n  var isHovering = hoverIndex === index;\n  var isRadio = type === 'radio';\n  var isCheckBox = type === 'checkbox';\n  var isDisabled = disabled ? true : undefined;\n  var isAnchor = href && !isDisabled && !isRadio && !isCheckBox;\n\n  var handleClick = function handleClick(keyCode) {\n    if (isDisabled) return;\n    var isStopPropagation = false;\n    var event = {\n      value: value,\n      keyCode: keyCode\n    };\n\n    if (isCheckBox) {\n      event.checked = !checked;\n    }\n\n    if (isRadio) {\n      event.name = radioGroup.name;\n      isStopPropagation = true;\n      safeCall(radioGroup.onChange, event);\n    } else {\n      isStopPropagation = safeCall(onClick, event) === false;\n    }\n\n    eventHandlers.handleClick(event, isStopPropagation, isCheckBox || isRadio);\n  };\n\n  var handleKeyUp = function handleKeyUp(e) {\n    if (!isActive) return;\n    onKeyUp(e);\n\n    switch (e.keyCode) {\n      case KeyCodes.SPACE:\n      case KeyCodes.RETURN:\n        if (isAnchor) {\n          itemRef.current.click();\n        } else {\n          handleClick(e.keyCode);\n        }\n\n        break;\n    }\n  };\n\n  var handleMouseEnter = function handleMouseEnter(e) {\n    if (isDisabled) return;\n    hoverIndexDispatch({\n      type: HoverIndexActionTypes.SET,\n      index: index\n    });\n  };\n\n  var handleBlur = function handleBlur(e) {\n    onBlur(e);\n    hoverIndexDispatch({\n      type: HoverIndexActionTypes.UNSET,\n      index: index\n    });\n  };\n\n  useEffect(function () {\n    if (isHovering && isParentOpen) {\n      itemRef.current.focus();\n    }\n  }, [isHovering, isParentOpen]);\n  var modifiers = Object.freeze({\n    type: type,\n    disabled: isDisabled,\n    hover: isHovering,\n    active: isActive && !isDisabled,\n    checked: isRadio ? radioGroup.value === value : isCheckBox ? !!checked : undefined,\n    anchor: isAnchor\n  });\n\n  var menuItemProps = _extends({\n    className: bem(menuClass, menuItemClass, modifiers)(className),\n    style: flatStyles(styles, modifiers),\n    role: isRadio ? 'menuitemradio' : isCheckBox ? 'menuitemcheckbox' : 'menuitem',\n    'aria-checked': modifiers.checked,\n    'aria-disabled': isDisabled,\n    tabIndex: isHovering ? 0 : -1,\n    ref: itemRef,\n    onMouseEnter: handleMouseEnter,\n    onKeyUp: handleKeyUp,\n    onBlur: handleBlur,\n    onClick: function onClick() {\n      return handleClick();\n    }\n  }, activeStateHandlers);\n\n  var renderChildren = safeCall(children, modifiers);\n\n  if (isAnchor) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      role: \"presentation\"\n    }, /*#__PURE__*/React.createElement(\"a\", _extends({}, restProps, {\n      href: href\n    }, menuItemProps), renderChildren));\n  } else {\n    return /*#__PURE__*/React.createElement(\"li\", menuItemProps, renderChildren);\n  }\n}), 'MenuItem');\nMenuItem.propTypes = _extends({}, stylePropTypes, {\n  value: PropTypes.any,\n  href: PropTypes.string,\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  onClick: PropTypes.func\n});\n\nvar MenuDivider = defineName(function MenuDivider(_ref) {\n  var className = _ref.className,\n      styles = _ref.styles;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: bem(menuClass, menuDividerClass)(className),\n    style: flatStyles(styles),\n    role: \"separator\"\n  });\n}, 'MenuDivider');\nMenuDivider.propTypes = _extends({}, stylePropTypes);\n\nvar MenuHeader = defineName(function MenuHeader(_ref) {\n  var className = _ref.className,\n      styles = _ref.styles,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: bem(menuClass, menuHeaderClass)(className),\n    style: flatStyles(styles),\n    role: \"presentation\"\n  }, children);\n}, 'MenuHeader');\nMenuHeader.propTypes = _extends({}, stylePropTypes);\n\nvar MenuRadioGroup = defineName(React.memo(function MenuRadioGroup(_ref) {\n  var ariaLabel = _ref['aria-label'],\n      className = _ref.className,\n      styles = _ref.styles,\n      name = _ref.name,\n      value = _ref.value,\n      children = _ref.children,\n      onChange = _ref.onChange;\n  var contextValue = useMemo(function () {\n    return {\n      name: name,\n      value: value,\n      onChange: onChange\n    };\n  }, [name, value, onChange]);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: bem(menuClass, radioGroupClass)(className),\n    style: flatStyles(styles),\n    role: \"group\",\n    \"aria-label\": ariaLabel || name || 'Radio group'\n  }, /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: contextValue\n  }, children)));\n}), 'MenuRadioGroup');\nMenuRadioGroup.propTypes = _extends({}, stylePropTypes, {\n  'aria-label': PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.any,\n  children: PropTypes.node.isRequired,\n  onChange: PropTypes.func\n});\n\nexport { ControlledMenu, Menu, MenuButton, MenuDivider, MenuHeader, MenuItem, MenuRadioGroup, SubMenu, useMenuState };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashLink as Link } from 'react-router-hash-link';\n\n\nexport const TableContentsList = React.memo(function TableContentsList({\n    list,\n    level\n}) {\n\n    const listElt = list.map((item) => {\n        let nested = null;\n        if (item.list) {\n            nested = <TableContentsList list={item.list} level={level + 1} />;\n        }\n\n        return (\n            <li key={item.id}>\n                <Link smooth to={`#${item.id}`}>{item.title}</Link>\n                {nested}\n            </li>\n        );\n    });\n\n    return (\n        <ul className={`contents-list-lv${level}`}>\n            {listElt}\n        </ul>\n    );\n});\n\nTableContentsList.propTypes = {\n    list: PropTypes.array.isRequired,\n    level: PropTypes.number\n};\n\nTableContentsList.defaultProps = {\n    level: 1\n};\n","import React, { useContext } from 'react';\nimport { DomInfoContext } from '../utils';\nimport { TableContentsList } from './TableContentsList';\n\nexport const TableContents = React.memo(function TableContents({\n    children\n}) {\n\n    const domInfo = useContext(DomInfoContext);\n\n    return (\n        <aside className=\"table-contents\"\n            style={{ top: domInfo.navbarHeight + 'px' }}>\n            <nav aria-label=\"Table of contents\"\n                style={{\n                    maxHeight: domInfo.tocPosition === 'sticky'\n                        ? domInfo.vHeight - domInfo.navbarHeight + 'px'\n                        : undefined\n                }}>\n                <TableContentsList list={children} />\n            </nav>\n        </aside>\n    );\n});\n","import React, { useState, useRef, useLayoutEffect } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { bem } from '../utils';\n\nconst blockName = 'hash-heading';\n\nexport const HashHeading = React.memo(function HashHeading({\n    id,\n    title,\n    heading,\n    smooth\n}) {\n\n    const ref = useRef(null);\n    const [hover, setHover] = useState(false);\n    const [fontSize, setFontSize] = useState();\n\n    useLayoutEffect(() => {\n        setFontSize(getComputedStyle(ref.current).getPropertyValue('font-size'));\n    }, []);\n\n    return (\n        <div className={bem(blockName)}\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}>\n            {React.createElement(\n                heading,\n                {\n                    id,\n                    ref,\n                    className: bem(blockName, 'heading')\n                },\n                title)}\n\n            <Link className={bem(blockName, 'link', { hover })}\n                to={`#${id}`}\n                smooth={smooth}\n                style={{ fontSize }}>\n                #\n            </Link>\n        </div>\n    );\n});\n\nHashHeading.defaultProps = {\n    heading: 'h1'\n};\n","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { HashHeading } from './HashHeading';\nimport { bem, ToastContext } from '../utils';\nimport hljs from 'highlight.js';\nimport $ from 'jquery';\n\nconst blockName = 'example';\n\nexport const Example = React.memo(function Example({\n    initialFullSource,\n    data: { id, title, desc, source, fullSource },\n    children,\n    ...restProps\n}) {\n    const ref = useRef(null);\n    const setToast = useContext(ToastContext);\n    const [isFullSource, setIsFullSource] = useState(initialFullSource);\n    const sourceCode = isFullSource ? fullSource : source;\n    const sourceBtnTitle = `${isFullSource ? 'Hide' : 'Show'} full source code`;\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(sourceCode)\n            .then(() => setToast('The code has been copied.'))\n            .catch(() => setToast('Something went wrong.'));\n    }\n\n    useEffect(() => {\n        $(ref.current).find('pre code').each((_, block) => hljs.highlightBlock(block));\n        $(ref.current).find('[data-toggle=\"tooltip\"]').tooltip('hide').tooltip();\n    }, [isFullSource]);\n\n    return (\n        <section className={bem(blockName)} ref={ref} aria-labelledby={id}>\n            <HashHeading id={id} title={title} heading=\"h3\" />\n\n            {desc}\n            <div {...restProps} className={bem(blockName, 'demo')}>\n                {children}\n            </div>\n\n            <div className={bem(blockName, 'actions')}>\n                {sourceCode && <button className=\"btn btn-outline-secondary\"\n                    data-toggle=\"tooltip\" data-placement=\"top\"\n                    data-original-title=\"Copy code\"\n                    aria-label=\"Copy code\"\n                    onClick={handleCopy}>\n                    <i className=\"material-icons\">content_copy</i>\n                </button>}\n                <button className={`btn ${isFullSource ? 'btn-secondary' : 'btn-outline-secondary'}`}\n                    data-toggle=\"tooltip\" data-placement=\"top\"\n                    data-original-title={sourceBtnTitle}\n                    aria-label={sourceBtnTitle}\n                    onClick={() => setIsFullSource(s => !s)}>\n                    <i className=\"material-icons\">code</i>\n                </button>\n            </div>\n\n            {sourceCode && <pre className={bem(blockName, 'source')} >\n                <code className=\"lang-jsx\">\n                    {sourceCode}\n                </code>\n            </pre>}\n        </section>\n    );\n});\n","import React from 'react';\n\nexport function LibName() {\n    return <span className=\"lib-name\">React-Menu</span>\n}\n","import React from 'react';\n\nexport function ARIAPracticesLink() {\n    return (\n        <a href=\"https://www.w3.org/TR/wai-aria-practices/#menu\"\n            target=\"_blank\" rel=\"noopener noreferrer\">\n            WAI-ARIA Authoring Practices\n        </a>\n    );\n}\n","import React from 'react';\nimport { LibName } from '../components/LibName';\nimport { ARIAPracticesLink } from '../components/ARIAPracticesLink';\nimport { HashLink as Link } from 'react-router-hash-link';\n\nconst menuLink = <Link to={'/docs#menu'}>Menu</Link>;\nconst menuItemLink = <Link to={'/docs#menu-item'}>MenuItem</Link>;\nconst menuButtonLink = <Link to={'/docs#menu-button'}>MenuButton</Link>;\nconst menuStateHookLink = <Link to={'/docs#use-menu-state'}>useMenuState</Link>;\nconst styleGuideLink = <Link to={'/style-guide'}>style guide</Link>;\n\nexport const basicMenu = {\n    id: 'basic-menu',\n\n    title: 'Basic menu',\n\n    desc:\n        <p>The most basic menu consists of several <code>MenuItem</code>s wrapped\n        in a <code>Menu</code>, and is controlled by a <code>MenuButton</code>.</p>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const subMenu = {\n    id: 'submenu',\n\n    title: 'Submenu',\n\n    desc:\n        <p><code>SubMenu</code> can be placed in a <code>Menu</code> and has its\n        own <code>MenuItem</code>s as children. You might also create nested submenus under a submenu.</p>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <SubMenu label=\"Open\">\n        <MenuItem>index.html</MenuItem>\n        <MenuItem>example.js</MenuItem>\n        <SubMenu label=\"Styles\">\n            <MenuItem>about.css</MenuItem>\n            <MenuItem>home.css</MenuItem>\n            <MenuItem>index.css</MenuItem>\n        </SubMenu>\n    </SubMenu>\n    <MenuItem>Save</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    SubMenu\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <SubMenu label=\"Open\">\n                <MenuItem>index.html</MenuItem>\n                <MenuItem>example.js</MenuItem>\n                <SubMenu label=\"Styles\">\n                    <MenuItem>about.css</MenuItem>\n                    <MenuItem>home.css</MenuItem>\n                    <MenuItem>index.css</MenuItem>\n                </SubMenu>\n            </SubMenu>\n            <MenuItem>Save</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const eventHandling = {\n    id: 'event-handling',\n\n    title: 'Event handling',\n\n    desc:\n        <>\n            <p>When a menu item is activated, the <code>onClick</code> event first fires on\n            the menu item and then bubbles up to the root <code>Menu</code> component. To stop\n            bubbling, return <code>false</code> from the menu item event handler.</p>\n            <p>For details of the event object, please refer to {menuItemLink}.</p>\n        </>,\n\n    source:\n        `const [text, setText] = useState('');\n\nconst handleMenuClick = e => {\n    setText(t => t + \\`[Menu] \\${e.value} clicked\\\\n\\\\n\\`);\n};\n\nconst handleFileClick = e => {\n    setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\`);\n};\n\nconst handleSaveClick = e => {\n    setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\\\n\\`);\n    return false;\n};\n\n<div>\n    <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n        onClick={handleMenuClick}>\n\n        <MenuItem value=\"File\" onClick={handleFileClick}>\n            New File\n        </MenuItem>\n\n        <MenuItem value=\"Save\" onClick={handleSaveClick}>\n            Save\n        </MenuItem>\n\n        <MenuItem value=\"Close\">Close Window</MenuItem>\n    </Menu>\n\n    <button onClick={() => setText('')}>\n        Clear\n    </button>\n</div>\n\n<textarea readOnly ref={ref} value={text} />`,\n\n    fullSource:\n        `import React, { useRef, useState, useLayoutEffect } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const ref = useRef(null);\n    const [text, setText] = useState('');\n\n    const handleMenuClick = e => {\n        setText(t => t + \\`[Menu] \\${e.value} clicked\\\\n\\\\n\\`);\n    };\n\n    const handleFileClick = e => {\n        setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\`);\n    };\n\n    const handleSaveClick = e => {\n        setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\\\n\\`);\n        return false;\n    };\n\n    useLayoutEffect(() => {\n        ref.current.scrollTop = ref.current.scrollHeight;\n    }, [text]);\n\n    return (\n        <>\n            <div>\n                <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                    onClick={handleMenuClick}>\n\n                    <MenuItem value=\"File\" onClick={handleFileClick}>\n                        New File\n                    </MenuItem>\n\n                    <MenuItem value=\"Save\" onClick={handleSaveClick}>\n                        Save\n                    </MenuItem>\n\n                    <MenuItem value=\"Close\">Close Window</MenuItem>\n                </Menu>\n\n                <button onClick={() => setText('')}>\n                    Clear\n                </button>\n            </div>\n\n            <textarea readOnly ref={ref} value={text} />\n        </>\n    );\n}`\n};\n\nexport const radioGroup = {\n    id: 'radio-group',\n\n    title: 'Radio group',\n\n    desc:\n        <p>You could make menu items behave like radio buttons by wrapping them under a <code>MenuRadioGroup</code>.\n        The children menu item which has the same value (strict equality ===) as the radio group is marked as checked.</p>,\n\n    source:\n        `const [textColor, setTextColor] = useState('red');\n\n<Menu menuButton={<MenuButton>Text color</MenuButton>}>\n    <MenuRadioGroup value={textColor}\n        onChange={e => setTextColor(e.value)}>\n        <MenuItem value=\"red\">Red</MenuItem>\n        <MenuItem value=\"green\">Green</MenuItem>\n        <MenuItem value=\"blue\">Blue</MenuItem>\n    </MenuRadioGroup>\n</Menu>`,\n\n    fullSource:\n        `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuRadioGroup\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const [textColor, setTextColor] = useState('red');\n\n    return (\n        <>\n            <Menu menuButton={<MenuButton>Text color</MenuButton>}>\n                <MenuRadioGroup value={textColor}\n                    onChange={e => setTextColor(e.value)}>\n                    <MenuItem value=\"red\">Red</MenuItem>\n                    <MenuItem value=\"green\">Green</MenuItem>\n                    <MenuItem value=\"blue\">Blue</MenuItem>\n                </MenuRadioGroup>\n            </Menu>\n\n            <div className=\"sample-text\"\n                style={{ color: textColor }}>\n                Sample text\n            </div>\n        </>\n    );\n}`\n};\n\nexport const checkBox = {\n    id: 'checkbox',\n\n    title: 'Checkbox',\n\n    desc:\n        <p>You could make menu items behave like checkboxes by setting <code>type=\"checkbox\"</code>.</p>,\n\n    source:\n        `const [isBold, setBold] = useState(true);\nconst [isItalic, setItalic] = useState(false);\nconst [isUnderline, setUnderline] = useState(false);\n\n<Menu menuButton={<MenuButton>Text style</MenuButton>}>\n    <MenuItem type=\"checkbox\" checked={isBold}\n        onClick={e => setBold(e.checked)}>\n        Bold\n    </MenuItem>\n    <MenuItem type=\"checkbox\" checked={isItalic}\n        onClick={e => setItalic(e.checked)}>\n        Italic\n    </MenuItem>\n    <MenuItem type=\"checkbox\" checked={isUnderline}\n        onClick={e => setUnderline(e.checked)}>\n        Underline\n    </MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const [isBold, setBold] = useState(true);\n    const [isItalic, setItalic] = useState(false);\n    const [isUnderline, setUnderline] = useState(false);\n\n    return (\n        <>\n            <Menu menuButton={<MenuButton>Text style</MenuButton>}>\n                <MenuItem type=\"checkbox\" checked={isBold}\n                    onClick={e => setBold(e.checked)}>\n                    Bold\n                </MenuItem>\n                <MenuItem type=\"checkbox\" checked={isItalic}\n                    onClick={e => setItalic(e.checked)}>\n                    Italic\n                </MenuItem>\n                <MenuItem type=\"checkbox\" checked={isUnderline}\n                    onClick={e => setUnderline(e.checked)}>\n                    Underline\n                </MenuItem>\n            </Menu>\n\n            <div className=\"sample-text\" style={{\n                fontWeight: isBold ? 'bold' : 'initial',\n                fontStyle: isItalic ? 'italic' : 'initial',\n                textDecoration: isUnderline ? 'underline' : 'initial'\n            }}>Sample text</div>\n        </>\n    );\n}`\n};\n\nexport const headerAndDivider = {\n    id: 'header-divider',\n\n    title: 'Header and divider',\n\n    desc:\n        <p>You could use <code>MenuHeader</code> and <code>MenuDivider</code> to group related menu items.\n        In addition, <code>MenuHeader</code> can wrap anything for presentational purposes.</p>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n    <MenuDivider />\n    <MenuHeader>Edit</MenuHeader>\n    <MenuItem>Cut</MenuItem>\n    <MenuItem>Copy</MenuItem>\n    <MenuItem>Paste</MenuItem>\n    <MenuDivider />\n    <MenuItem>Print</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuHeader,\n    MenuDivider\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n            <MenuDivider />\n            <MenuHeader>Edit</MenuHeader>\n            <MenuItem>Cut</MenuItem>\n            <MenuItem>Copy</MenuItem>\n            <MenuItem>Paste</MenuItem>\n            <MenuDivider />\n            <MenuItem>Print</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const combined = {\n    id: 'combined',\n\n    title: 'Combined example',\n\n    desc: <p>An example combines the usage of several components.</p>,\n\n    fullSource:\n        `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    SubMenu,\n    MenuHeader,\n    MenuDivider,\n    MenuRadioGroup\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n\n    const [textColor, setTextColor] = useState('red');\n    const [isBold, setBold] = useState(true);\n    const [isItalic, setItalic] = useState(false);\n    const [isUnderline, setUnderline] = useState(false);\n\n    return (\n        <>\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuDivider />\n                <MenuHeader>Text settings</MenuHeader>\n\n                <SubMenu label=\"Text color\">\n                    <MenuRadioGroup\n                        value={textColor}\n                        onChange={e => setTextColor(e.value)}>\n                        <MenuItem value={'red'}>Red</MenuItem>\n                        <MenuItem value={'green'}>Green</MenuItem>\n                        <MenuItem value={'blue'}>Blue</MenuItem>\n                    </MenuRadioGroup>\n                </SubMenu>\n\n                <SubMenu label=\"Text style\">\n                    <MenuItem type=\"checkbox\" checked={isBold}\n                        onClick={e => setBold(e.checked)}>\n                        Bold\n                    </MenuItem>\n                    <MenuItem type=\"checkbox\" checked={isItalic}\n                        onClick={e => setItalic(e.checked)}>\n                        Italic\n                    </MenuItem>\n                    <MenuItem type=\"checkbox\" checked={isUnderline}\n                        onClick={e => setUnderline(e.checked)}>\n                        Underline\n                    </MenuItem>\n                </SubMenu>\n            </Menu>\n\n            <div className=\"sample-text\" style={{\n                color: textColor,\n                fontWeight: isBold ? 'bold' : 'initial',\n                fontStyle: isItalic ? 'italic' : 'initial',\n                textDecoration: isUnderline ? 'underline' : 'initial'\n            }}>Sample text</div>\n        </>\n    );\n}`\n};\n\nexport const linkAndDisabled = {\n    id: 'link-disabled',\n\n    title: 'Link and disabled',\n\n    desc:\n        <p><code>MenuItem</code> can be made a hyperlink by giving it a <code>href</code> prop. Even if\n        it's a link, the <code>onClick</code> event still fires as normal. You might also disable\n        a menu item using the <code>disabled</code> prop.</p>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem href=\"https://www.google.com/\">Google</MenuItem>\n    <MenuItem href=\"https://github.com/szhsin/react-menu/\"\n        target=\"_blank\">\n        GitHub (new window)\n    </MenuItem>\n    <MenuItem>Regular item</MenuItem>\n    <MenuItem disabled>Disabled item</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem href=\"https://www.google.com/\">Google</MenuItem>\n            <MenuItem href=\"https://github.com/szhsin/react-menu/\"\n                target=\"_blank\">\n                GitHub (new window)\n            </MenuItem>\n            <MenuItem>Regular item</MenuItem>\n            <MenuItem disabled>Disabled item</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const iconAndImage = {\n    id: 'icon-image',\n\n    title: 'Icon and image',\n\n    desc:\n        <p><LibName /> doesn't include any imagery. However, you are free to use your own or\n    third-party icons and images, as you could wrap anything in a <code>MenuItem</code>. This\n    example use Google's Material icons.</p>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>\n        <i className=\"material-icons\">content_cut</i>Cut\n    </MenuItem>\n    <MenuItem>\n        <i className=\"material-icons\">content_copy</i>Copy\n    </MenuItem>\n    <MenuItem>\n        <i className=\"material-icons\">content_paste</i>Paste\n    </MenuItem>\n    <MenuDivider />\n    <MenuItem href=\"https://github.com/\">\n        <img src=\"octocat.png\" alt=\"\" role=\"presentation\" />GitHub\n    </MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuDivider\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>\n                <i className=\"material-icons\">content_cut</i>Cut\n            </MenuItem>\n            <MenuItem>\n                <i className=\"material-icons\">content_copy</i>Copy\n            </MenuItem>\n            <MenuItem>\n                <i className=\"material-icons\">content_paste</i>Paste\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem href=\"https://github.com/\">\n                <img src=\"octocat.png\" alt=\"\" role=\"presentation\" />GitHub\n            </MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const hoverAndActive = {\n    id: 'hover-active',\n\n    title: 'Hover and active',\n\n    desc:\n        <>\n            <p><code>MenuItem</code> manages a number of internal states such as 'hover' and 'active'.\n            If you need to display different contents under different states, you are able to\n            use <code>children</code> as a render prop and pass it a callback function.</p>\n            <p>For more menu item states, please refer to {menuItemLink}.</p>\n        </>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>\n        {({ hover, active }) =>\n            active ? 'Active' : hover ? 'Press me' : 'Hover me'}\n    </MenuItem>\n    <MenuDivider />\n    <MenuItem styles={{ justifyContent: 'center' }}>\n        {({ hover, active }) =>\n            <i className=\"material-icons md-48\">\n                {active ? 'sentiment_very_satisfied'\n                    : hover ? 'sentiment_satisfied_alt'\n                        : 'sentiment_very_dissatisfied'}\n            </i>\n        }\n    </MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuDivider\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>\n                {({ hover, active }) =>\n                    active ? 'Active' : hover ? 'Press me' : 'Hover me'}\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem styles={{ justifyContent: 'center' }}>\n                {({ hover, active }) =>\n                    <i className=\"material-icons md-48\">\n                        {active ? 'sentiment_very_satisfied'\n                            : hover ? 'sentiment_satisfied_alt'\n                                : 'sentiment_very_dissatisfied'}\n                    </i>\n                }\n            </MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const openStateButton = {\n    id: 'open-state',\n\n    title: 'Menu open state',\n\n    desc:\n        <p>If you need to change the contents of a menu button when the menu opens,\n        you could use the <code>menuButton</code> as a render prop and pass it a callback function.</p>,\n\n    source:\n        `<Menu menuButton={\n    ({ open }) =>\n        <MenuButton>{open ? 'Close' : 'Open'}</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={\n            ({ open }) =>\n                <MenuButton>{open ? 'Close' : 'Open'}</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const customisedButton = {\n    id: 'customised-btn',\n\n    title: 'Customised button',\n\n    desc:\n        <>\n            <p>You are free to use a native button element with <code>Menu</code>, or use your\n            own React button component which implements a forwarding ref and\n            accepts <code>onClick</code> and <code>onKeyDown</code> event props.</p>\n            <p><code>Menu</code> also works well with third-party React libraries,\n            such as the Material-UI.</p>\n            <p>The benefit of {menuButtonLink} is its has additional <code>aria</code> attributes, and you will\n            always be able to style it by following the {styleGuideLink}.</p>\n        </>,\n\n    source:\n        `<Menu menuButton={\n    <button className=\"btn btn-primary\">Open menu</button>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={\n            <button className=\"btn btn-primary\">Open menu</button>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const direction = {\n    id: 'menu-direction',\n\n    title: 'Direction',\n\n    desc:\n        <>\n            <p>You could control the direction in which a menu expands using the <code>direction</code> prop.</p>\n            <p>Please note the actual direction might be different depending on the available\n                viewport space, please see {menuLink} for more details.</p>\n        </>,\n\n    source:\n        `['top', 'left', 'right', 'bottom'].map(direction =>\n    <Menu menuButton={<MenuButton>{direction}</MenuButton>}\n        key={direction} direction={direction}>\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem>Close Window</MenuItem>\n    </Menu>)`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        ['top', 'left', 'right', 'bottom'].map(direction =>\n            <Menu menuButton={<MenuButton>{direction}</MenuButton>}\n                key={direction} direction={direction}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </Menu>)\n    );\n}`\n};\n\nexport const alignment = {\n    id: 'menu-alignment',\n\n    title: 'Alignment',\n\n    desc:\n        <p>You could control how a menu aligns with its menu button using the <code>align</code> prop.\n        It has effect <strong>only</strong> when <code>direction</code> is set to 'top' or 'bottom'.</p>,\n\n    source:\n        `['start', 'center', 'end'].map(align =>\n    <Menu menuButton={<MenuButton>{align}</MenuButton>}\n        key={align} align={align}>\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem>Close Window</MenuItem>\n    </Menu>)`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        ['start', 'center', 'end'].map(align =>\n            <Menu menuButton={<MenuButton>{align}</MenuButton>}\n                key={align} align={align}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </Menu>)\n    );\n}`\n};\n\nexport const managingState = {\n    id: 'managing-state',\n\n    title: 'Managing state',\n\n    desc:\n        <>\n            <p>In some use cases you may need to control how and when a menu is open or closed, and it can\n                be implemented using a <code>ControlledMenu</code>.</p>\n            <p>The minimum props you need to provide are a boolean <code>isOpen</code> state, and\n            a <code>ref</code> of an element to which menu will be positioned. You also need to\n            update <code>isOpen</code> in response to the <code>onClose</code> event.</p>\n        </>,\n\n    source:\n        `const [isOpen, setOpen] = useState(false);\nconst ref = useRef(null);\n\n<button ref={ref} className=\"btn btn-dark\"\n    onClick={() => setOpen(true)}>\n    Open menu\n</button>\n\n<ControlledMenu anchorRef={ref} isOpen={isOpen}\n    onClose={() => setOpen(false)}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</ControlledMenu>`,\n\n    fullSource:\n        `import React, { useState, useRef } from 'react';\nimport {\n    ControlledMenu,\n    MenuItem\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const [isOpen, setOpen] = useState(false);\n    const ref = useRef(null);\n\n    return (\n        <>\n            <button ref={ref} className=\"btn btn-dark\"\n                onClick={() => setOpen(true)}>\n                Open menu\n            </button>\n\n            <ControlledMenu anchorRef={ref} isOpen={isOpen}\n                onClose={() => setOpen(false)}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </ControlledMenu>\n        </>\n    );\n}`\n};\n\nexport const contextMenu = {\n    id: 'context-menu',\n\n    title: 'Context menu',\n\n    desc:\n        <>\n            <p>Context menu is implemented using a <code>ControlledMenu</code>.</p>\n            <p>The minimum props you need to provide are a boolean <code>isOpen</code> state, and\n            an <code>anchorPoint</code> of viewport coordinates to which menu will be positioned. You also need to\n            update <code>isOpen</code> in response to the <code>onClose</code> event.</p>\n        </>,\n\n    source:\n        `const [isOpen, setOpen] = useState(false);\nconst [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n\n<div onContextMenu={e => {\n    e.preventDefault();\n    setAnchorPoint({ x: e.clientX, y: e.clientY });\n    setOpen(true);\n}}>\n    Right click to open context menu\n\n    <ControlledMenu anchorPoint={anchorPoint} isOpen={isOpen}\n        onClose={() => setOpen(false)}>\n        <MenuItem>Cut</MenuItem>\n        <MenuItem>Copy</MenuItem>\n        <MenuItem>Paste</MenuItem>\n    </ControlledMenu>\n</div >`,\n\n    fullSource:\n        `import React, { useState } from 'react';\nimport {\n    ControlledMenu,\n    MenuItem\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const [isOpen, setOpen] = useState(false);\n    const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n\n    return (\n        <div onContextMenu={e => {\n            e.preventDefault();\n            setAnchorPoint({ x: e.clientX, y: e.clientY });\n            setOpen(true);\n        }}>\n            Right click to open context menu\n\n            <ControlledMenu anchorPoint={anchorPoint} isOpen={isOpen}\n                onClose={() => setOpen(false)}>\n                <MenuItem>Cut</MenuItem>\n                <MenuItem>Copy</MenuItem>\n                <MenuItem>Paste</MenuItem>\n            </ControlledMenu>\n        </div >\n    );\n}`\n};\n\nexport const menuStateHook = {\n    id: 'use-menu-state',\n\n    title: 'useMenuState',\n\n    desc:\n        <>\n            <p>To fully make use of functionalities provided by <code>ControlledMenu</code>, you\n            need to give it three props: <code>isMounted, isOpen, menuItemFocus</code>. To ease this\n            task, you could use the <code>useMenuState</code> Hook which returns these three states and\n            methods that manage them.</p>\n            <p>Please see {menuStateHookLink} for more details.</p>\n        </>,\n\n    source:\n        `const { openMenu, closeMenu, toggleMenu,\n    ...menuProps } = useMenuState();\nconst ref = useRef(null);\n\n<button ref={ref} className=\"btn btn-dark\"\n    onClick={() => openMenu()}>\n    Open menu\n</button>\n\n<ControlledMenu {...menuProps} anchorRef={ref}\n    onClose={() => closeMenu()}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</ControlledMenu>`,\n\n    fullSource:\n        `import React, { useRef } from 'react';\nimport {\n    ControlledMenu,\n    MenuItem,\n    useMenuState\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const { openMenu, closeMenu, toggleMenu,\n        ...menuProps } = useMenuState();\n    const ref = useRef(null);\n\n    return (\n        <>\n            <button ref={ref} className=\"btn btn-dark\"\n                onClick={() => openMenu()}>\n                Open menu\n            </button>\n\n            <ControlledMenu {...menuProps} anchorRef={ref}\n                onClose={() => closeMenu()}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </ControlledMenu>\n        </>\n    );\n}`\n};\n\nexport const stylesProp = {\n    id: 'styles-prop',\n\n    title: 'styles prop',\n\n    desc:\n        <>\n            <p>You could apply your style by giving an object to the <code>styles</code> prop. Regular styles\n            are put in the object directly just like React's <code>style</code> prop, and styles which are only applied to\n            specific component states are written in nested objects under corresponding keys. <LibName /> will\n            flatten the styles object by applying the properties from top to bottom, with later properties\n            overriding earlier ones of the same name.</p>\n            <p>For more details about the state keys, please refer to the <code>styles</code> prop under\n            each <Link to={'/docs#menu-item'}>component</Link>.</p>\n        </>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}\n    styles={{\n        border: '2px dashed green',\n        boxShadow: 'none'\n    }}>\n\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem styles={{\n        color: 'blue',\n        backgroundColor: '#ee1',\n        hover: {\n            color: '#ee1',\n            backgroundColor: '#bf4080'\n        },\n        active: {\n            backgroundColor: '#333'\n        }\n    }}>\n        I'm special\n    </MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n            styles={{\n                border: '2px dashed green',\n                boxShadow: 'none'\n            }}>\n\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem styles={{\n                color: 'blue',\n                backgroundColor: '#ee1',\n                hover: {\n                    color: '#ee1',\n                    backgroundColor: '#bf4080'\n                },\n                active: {\n                    backgroundColor: '#333'\n                }\n            }}>\n                I'm special\n            </MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const classNameProp = {\n    id: 'classname-prop',\n\n    title: 'className prop',\n\n    desc:\n        <>\n            <p>You could give components custom CSS class using the <code>className</code> prop.\n            Optionally, you may pass a function to the prop and returns different CSS class names\n            under different component states.</p>\n            <p>For more details about available states, please refer to the <code>className</code> prop under\n            each <Link to={'/docs#menu-item'}>component</Link>.</p>\n        </>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}\n    className=\"my-menu\">\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem className={\n        ({ hover, active }) =>\n            active ? 'my-menuitem-active'\n                : hover ? 'my-menuitem-hover'\n                    : 'my-menuitem'\n    }>\n        I'm special\n    </MenuItem>\n</Menu>\n\n// CSS classes\n.my-menu {\n    border: 2px solid #dc3545;\n    border-radius: 0;\n    box-shadow: none;\n}\n\n.my-menuitem {\n    color: blue;\n    background-color: #ee1;\n}\n\n.my-menuitem-hover {\n    color: #ee1;\n    background-color: #bf4080;\n}\n\n.my-menuitem-active {\n    background-color: #333;\n}`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n            className=\"my-menu\">\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem className={\n                ({ hover, active }) =>\n                    active ? 'my-menuitem-active'\n                        : hover ? 'my-menuitem-hover'\n                            : 'my-menuitem'\n            }>\n                I'm special\n            </MenuItem>\n        </Menu>\n    );\n}\n\n// CSS classes\n.my-menu {\n    border: 2px solid #dc3545;\n    border-radius: 0;\n    box-shadow: none;\n}\n\n.my-menuitem {\n    color: blue;\n    background-color: #ee1;\n}\n\n.my-menuitem-hover {\n    color: #ee1;\n    background-color: #bf4080;\n}\n\n.my-menuitem-active {\n    background-color: #333;\n}`\n};\n\nexport const menu = {\n    id: 'menu',\n    title: 'Menu',\n    desc:\n        <p>The group includes common usage examples of <code>Menu, SubMenu</code>, and <code>MenuItem</code>.</p>,\n    list: [\n        basicMenu,\n        subMenu,\n        eventHandling,\n        radioGroup,\n        checkBox,\n        headerAndDivider,\n        combined\n    ]\n};\n\nexport const menuItem = {\n    id: 'menu-item',\n    title: 'Menu item',\n    desc:\n        <p>Advanced usage examples with <code>MenuItem</code>.</p>,\n    list: [\n        linkAndDisabled,\n        iconAndImage,\n        hoverAndActive\n    ]\n};\n\nexport const menuButton = {\n    id: 'menu-button',\n    title: 'Menu button',\n    desc:\n        <p>Change the look and content of your menu button.</p>,\n    list: [\n        openStateButton,\n        customisedButton,\n    ]\n};\n\nexport const menuPlacement = {\n    id: 'menu-placement',\n    title: 'Menu placement',\n    desc:\n        <p>Control the position of menu related to menu button.</p>,\n    list: [\n        direction,\n        alignment\n    ]\n};\n\nexport const controlledMenu = {\n    id: 'controlled-menu',\n    title: 'Controlled menu',\n    desc:\n        <p>Get more control on the states with <code>ControlledMenu</code>.</p>,\n    list: [\n        managingState,\n        contextMenu,\n        menuStateHook\n    ]\n};\n\nexport const customisedStyle = {\n    id: 'customised-style',\n    title: 'Customised style',\n    desc:\n        <>\n            <p><LibName /> provides multiple ways to modify its default style. Using your own stylesheets\n                to override the default ones is the most efficient and recommended approach. Please see\n                the {styleGuideLink} for more details.</p>\n            <p>Sometimes you may need to style a specific menu or menu item differently. One of the solutions\n                is to give that menu a <code>id</code> prop and precede your CSS selectors with the id.\n                In addition, you could use <code>styles</code> or <code>className</code> props.</p>\n        </>,\n    list: [\n        stylesProp,\n        classNameProp\n    ]\n};\n\nexport const usageExamples =\n{\n    id: 'usage-examples',\n    title: 'Usage',\n    desc:\n        <p>Each of the following sections includes a live example. They are grouped into related categories.\n        You could toggle between the brief and full versions of source code.</p>,\n    list: [\n        menu,\n        menuItem,\n        menuButton,\n        menuPlacement,\n        controlledMenu,\n        customisedStyle\n    ]\n};\n\nexport const features = {\n    id: 'features',\n    title: 'Features',\n    desc:\n        <ul className=\"features\">\n            <li>React menu components for easy and fast web development.</li>\n            <li>Unlimited levels of submenu.</li>\n            <li>Radio and checkbox menu items.</li>\n            <li>Supports context menu.</li>\n            <li>Customisable styling.</li>\n            <li>Comprehensive keyboard interaction.</li>\n            <li>Built to comply with <ARIAPracticesLink />.</li>\n        </ul>\n};\n\nexport const installation = {\n    id: 'installation',\n    title: 'Installation',\n    desc:\n        <>\n            <p>Install <LibName /> from npm:</p>\n            <p className=\"install-command\">npm install @szhsin/react-menu</p>\n        </>\n};\n\nexport default [features, installation, usageExamples];\n","import React, { useRef, useState, useLayoutEffect } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    SubMenu,\n    MenuRadioGroup,\n    MenuHeader,\n    MenuDivider,\n    ControlledMenu,\n    useMenuState\n} from '@szhsin/react-menu';\nimport { TableContents } from './TableContents';\nimport { Example } from './Example';\nimport { HashHeading } from './HashHeading';\nimport data, * as codeExamples from '../data/codeExamples';\n\n\nexport const Usage = React.memo(function Usage() {\n\n    return (\n        <React.Fragment>\n            <TableContents>\n                {data}\n            </TableContents>\n\n            <main id=\"usage\">\n                <h1 className=\"title\">React-Menu</h1>\n                <GroupingSection heading=\"h1\" data={codeExamples.features} />\n                <GroupingSection heading=\"h1\" data={codeExamples.installation} />\n                <GroupingSection heading=\"h1\" data={codeExamples.usageExamples} />\n\n                <GroupingSection data={codeExamples.menu} />\n                <BasicMenuExample />\n                <SubmenuExample />\n                <EventHandlingExample />\n                <RadioGroupExample />\n                <CheckBoxExample />\n                <HeaderAndDividerExample />\n                <CombinedExample />\n\n                <GroupingSection data={codeExamples.menuItem} />\n                <LinkAndDisabledExample />\n                <IconAndImageExample />\n                <HoverAndActiveExample />\n\n                <GroupingSection data={codeExamples.menuButton} />\n                <OpenStateExample />\n                <CustomisedButtonExample />\n\n                <GroupingSection data={codeExamples.menuPlacement} />\n                <MenuDirectionExample />\n                <MenuAlignmentExample />\n\n                <GroupingSection data={codeExamples.controlledMenu} />\n                <ManagingStateExample />\n                <ContextMenuExample />\n                <MenuStateHookExample />\n\n                <GroupingSection data={codeExamples.customisedStyle} />\n                <StylesPropExample />\n                <ClassNamePropExample />\n            </main >\n\n            <div className=\"place-holder\" role=\"presentation\" />\n        </React.Fragment>\n    );\n});\n\nfunction GroupingSection({ heading, data: { id, title, desc } }) {\n    return (\n        <>\n            <HashHeading id={id} title={title} heading={heading || 'h2'} />\n            {desc}\n        </>\n    );\n}\n\nfunction BasicMenuExample() {\n\n    return (\n        <Example initialFullSource={true} data={codeExamples.basicMenu} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction SubmenuExample() {\n\n    return (\n        <Example data={codeExamples.subMenu} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>New File</MenuItem>\n                <SubMenu label=\"Open\">\n                    <MenuItem>index.html</MenuItem>\n                    <MenuItem>example.js</MenuItem>\n                    <SubMenu label=\"Styles\">\n                        <MenuItem>about.css</MenuItem>\n                        <MenuItem>home.css</MenuItem>\n                        <MenuItem>index.css</MenuItem>\n                    </SubMenu>\n                </SubMenu>\n                <MenuItem>Save</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\n\nfunction EventHandlingExample() {\n    const ref = useRef(null);\n    const [text, setText] = useState('');\n\n    const handleMenuClick = e => {\n        setText(t => t + `[Menu] ${e.value} clicked\\n\\n`);\n    };\n\n    const handleFileClick = e => {\n        setText(t => t + `[MenuItem] ${e.value} clicked\\n`);\n    };\n\n    const handleSaveClick = e => {\n        setText(t => t + `[MenuItem] ${e.value} clicked\\n\\n`);\n        return false;\n    };\n\n    useLayoutEffect(() => {\n        ref.current.scrollTop = ref.current.scrollHeight;\n    }, [text]);\n\n    return (\n        <Example data={codeExamples.eventHandling} >\n            <div className=\"buttons\">\n                <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                    onClick={handleMenuClick}>\n\n                    <MenuItem value=\"File\" onClick={handleFileClick}>\n                        New File\n                    </MenuItem>\n\n                    <MenuItem value=\"Save\" onClick={handleSaveClick}>\n                        Save\n                    </MenuItem>\n\n                    <MenuItem value=\"Close\">Close Window</MenuItem>\n                </Menu>\n\n                <button className=\"btn btn btn-dark\"\n                    onClick={() => setText('')}>\n                    Clear\n                </button>\n            </div>\n\n            <textarea readOnly ref={ref} value={text} />\n        </Example>\n    );\n}\n\nfunction RadioGroupExample() {\n    const [textColor, setTextColor] = useState('red');\n\n    return (\n        <Example data={codeExamples.radioGroup} >\n            <Menu menuButton={<MenuButton>Text color</MenuButton>}>\n                <MenuRadioGroup value={textColor}\n                    onChange={e => setTextColor(e.value)}>\n                    <MenuItem value=\"red\">Red</MenuItem>\n                    <MenuItem value=\"green\">Green</MenuItem>\n                    <MenuItem value=\"blue\">Blue</MenuItem>\n                </MenuRadioGroup>\n            </Menu>\n\n            <div className=\"sample-text\" style={{ color: textColor }}>\n                Sample text\n            </div>\n        </Example>\n    );\n}\n\nfunction CheckBoxExample() {\n    const [isBold, setBold] = useState(true);\n    const [isItalic, setItalic] = useState(false);\n    const [isUnderline, setUnderline] = useState(false);\n\n    return (\n        <Example data={codeExamples.checkBox} >\n            <Menu menuButton={<MenuButton>Text style</MenuButton>}>\n                <MenuItem type=\"checkbox\" checked={isBold}\n                    onClick={e => setBold(e.checked)}>\n                    Bold\n                </MenuItem>\n                <MenuItem type=\"checkbox\" checked={isItalic}\n                    onClick={e => setItalic(e.checked)}>\n                    Italic\n                </MenuItem>\n                <MenuItem type=\"checkbox\" checked={isUnderline}\n                    onClick={e => setUnderline(e.checked)}>\n                    Underline\n                </MenuItem>\n            </Menu>\n\n            <div className=\"sample-text\" style={{\n                fontWeight: isBold ? 'bold' : 'initial',\n                fontStyle: isItalic ? 'italic' : 'initial',\n                textDecoration: isUnderline ? 'underline' : 'initial'\n            }}>Sample text</div>\n        </Example>\n    );\n}\n\nfunction HeaderAndDividerExample() {\n\n    return (\n        <Example data={codeExamples.headerAndDivider} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n                <MenuDivider />\n                <MenuHeader>Edit</MenuHeader>\n                <MenuItem>Cut</MenuItem>\n                <MenuItem>Copy</MenuItem>\n                <MenuItem>Paste</MenuItem>\n                <MenuDivider />\n                <MenuItem>Print</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction CombinedExample() {\n    const [textColor, setTextColor] = useState('red');\n    const [isBold, setBold] = useState(true);\n    const [isItalic, setItalic] = useState(false);\n    const [isUnderline, setUnderline] = useState(false);\n\n    return (\n        <Example data={codeExamples.combined} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuDivider />\n                <MenuHeader>Text settings</MenuHeader>\n\n                <SubMenu label=\"Text color\">\n                    <MenuRadioGroup\n                        value={textColor}\n                        onChange={e => setTextColor(e.value)}>\n                        <MenuItem value={'red'}>Red</MenuItem>\n                        <MenuItem value={'green'}>Green</MenuItem>\n                        <MenuItem value={'blue'}>Blue</MenuItem>\n                    </MenuRadioGroup>\n                </SubMenu>\n\n                <SubMenu label=\"Text style\">\n                    <MenuItem type=\"checkbox\" checked={isBold}\n                        onClick={e => setBold(e.checked)}>\n                        Bold\n                    </MenuItem>\n                    <MenuItem type=\"checkbox\" checked={isItalic}\n                        onClick={e => setItalic(e.checked)}>\n                        Italic\n                    </MenuItem>\n                    <MenuItem type=\"checkbox\" checked={isUnderline}\n                        onClick={e => setUnderline(e.checked)}>\n                        Underline\n                    </MenuItem>\n                </SubMenu>\n            </Menu>\n\n            <div className=\"sample-text\" style={{\n                color: textColor,\n                fontWeight: isBold ? 'bold' : 'initial',\n                fontStyle: isItalic ? 'italic' : 'initial',\n                textDecoration: isUnderline ? 'underline' : 'initial'\n            }}>Sample text</div>\n        </Example>\n    );\n}\n\nfunction LinkAndDisabledExample() {\n\n    return (\n        <Example data={codeExamples.linkAndDisabled} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem href=\"https://www.google.com/\">Google</MenuItem>\n                <MenuItem href=\"https://github.com/szhsin/react-menu/\"\n                    target=\"_blank\">\n                    GitHub (new window)\n                </MenuItem>\n                <MenuItem>Regular item</MenuItem>\n                <MenuItem disabled>Disabled item</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction IconAndImageExample() {\n\n    return (\n        <Example data={codeExamples.iconAndImage} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>\n                    <i className=\"material-icons\">content_cut</i>Cut\n                </MenuItem>\n                <MenuItem>\n                    <i className=\"material-icons\">content_copy</i>Copy\n                </MenuItem>\n                <MenuItem>\n                    <i className=\"material-icons\">content_paste</i>Paste\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem href=\"https://github.com/\">\n                    <img src=\"octocat.png\" alt=\"\" role=\"presentation\" />GitHub\n                </MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction HoverAndActiveExample() {\n\n    return (\n        <Example data={codeExamples.hoverAndActive} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>\n                    {({ hover, active }) =>\n                        active ? 'Active' : hover ? 'Press me' : 'Hover me'\n                    }\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem styles={{ justifyContent: 'center' }}>\n                    {({ hover, active }) =>\n                        <i className=\"material-icons md-48\">\n                            {active ? 'sentiment_very_satisfied'\n                                : hover ? 'sentiment_satisfied_alt'\n                                    : 'sentiment_very_dissatisfied'}\n                        </i>\n                    }\n                </MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction OpenStateExample() {\n\n    return (\n        <Example data={codeExamples.openStateButton} >\n            <Menu menuButton={\n                ({ open }) =>\n                    <MenuButton styles={{ minWidth: '5rem' }}>\n                        {open ? 'Close' : 'Open'}\n                    </MenuButton>\n            }>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction CustomisedButtonExample() {\n\n    return (\n        <Example data={codeExamples.customisedButton} >\n            <Menu menuButton={<button className=\"btn btn-primary\">Open menu</button>}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction MenuDirectionExample() {\n\n    const menus = ['top', 'left', 'right', 'bottom'].map(direction => (\n        <Menu menuButton={<MenuButton>{direction}</MenuButton>}\n            key={direction} direction={direction}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    ));\n\n    return (\n        <Example data={codeExamples.direction} >\n            {menus}\n        </Example>\n    );\n}\n\nfunction MenuAlignmentExample() {\n\n    const menus = ['start', 'center', 'end'].map(align => (\n        <Menu menuButton={<MenuButton>{align}</MenuButton>}\n            key={align} align={align}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    ));\n\n    return (\n        <Example data={codeExamples.alignment} >\n            {menus}\n        </Example>\n    );\n}\n\nfunction ManagingStateExample() {\n\n    const [isOpen, setOpen] = useState(false);\n    const ref = useRef(null);\n\n    return (\n        <Example data={codeExamples.managingState}>\n            <button ref={ref} className=\"btn btn-dark\"\n                onClick={() => setOpen(true)}>\n                Open menu\n            </button>\n\n            <ControlledMenu anchorRef={ref} isOpen={isOpen}\n                onClose={() => setOpen(false)}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </ControlledMenu>\n        </Example>\n    );\n}\n\nfunction ContextMenuExample() {\n\n    const [isOpen, setOpen] = useState(false);\n    const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n\n    return (\n        <Example data={codeExamples.contextMenu}\n            onContextMenu={e => {\n                e.preventDefault();\n                setAnchorPoint({ x: e.clientX, y: e.clientY });\n                setOpen(true);\n            }}>\n\n            Right click to open context menu\n\n            <ControlledMenu anchorPoint={anchorPoint} isOpen={isOpen}\n                onClose={() => setOpen(false)}>\n                <MenuItem>Cut</MenuItem>\n                <MenuItem>Copy</MenuItem>\n                <MenuItem>Paste</MenuItem>\n            </ControlledMenu>\n        </Example >\n    );\n}\n\nfunction MenuStateHookExample() {\n\n    const { openMenu, closeMenu, toggleMenu,\n        ...menuProps } = useMenuState();\n    const ref = useRef(null);\n\n    return (\n        <Example data={codeExamples.menuStateHook}>\n            <button ref={ref} className=\"btn btn-dark\"\n                onClick={() => openMenu()}>\n                Open menu\n            </button>\n\n            <ControlledMenu {...menuProps} anchorRef={ref}\n                onClose={() => closeMenu()}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </ControlledMenu>\n        </Example>\n    );\n}\n\nfunction StylesPropExample() {\n\n    return (\n        <Example data={codeExamples.stylesProp} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                direction=\"top\" align=\"center\"\n                styles={{\n                    border: '2px dashed green',\n                    boxShadow: 'none'\n                }}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem styles={{\n                    color: 'blue',\n                    backgroundColor: '#ee1',\n                    hover: {\n                        color: '#ee1',\n                        backgroundColor: '#bf4080'\n                    },\n                    active: {\n                        backgroundColor: '#333'\n                    }\n                }}>\n                    I'm special\n                </MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction ClassNamePropExample() {\n\n    return (\n        <Example data={codeExamples.classNameProp} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                className=\"my-menu\" direction=\"top\" align=\"center\">\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem className={\n                    ({ hover, active }) =>\n                        active ? 'my-menuitem-active'\n                            : hover ? 'my-menuitem-hover'\n                                : 'my-menuitem'\n                }>\n                    I'm special\n                </MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\n","import React from 'react';\nimport { LibName } from '../components/LibName';\nimport { HashLink as Link } from 'react-router-hash-link';\n\n\nconst bem = block => element => modifier => {\n    let className = block;\n    if (element) className += `__${element}`;\n    if (modifier) className += `--${modifier}`;\n    return className;\n}\n\nconst menuClass = bem('.rc-menu');\nconst menuItemClass = menuClass('item');\n\nconst stylesheet = {\n    id: 'stylesheets',\n    title: 'Stylesheets',\n    desc:\n        <>\n            <p><LibName /> uses regular stylesheets to style components. It follows\n         the <a href=\"http://getbem.com/naming/\" target=\"_blank\" rel=\"noopener noreferrer\">BEM methodology</a> to name CSS selectors.\n         You are able to override the default styles by placing your stylesheets after its own. All default styles use CSS selectors\n         with the lowest possible specificity, and you could always precede your selectors\n         with <code>.rc-menu-container</code> in case a specific style cannot be overridden.</p>\n            <p><em>Using stylesheets is the most efficient and recommended approach to style</em> <LibName />.</p>\n        </>,\n    list: [\n        {\n            id: 'menu',\n            title: 'Menu and ControlledMenu',\n            rows: [\n                {\n                    name: '.rc-menu-container',\n                    desc: 'Root element that contains the menu.'\n                },\n                {\n                    name: menuClass()(),\n                    desc: 'Menu element.'\n                },\n                {\n                    name: menuClass()('open'),\n                    desc: 'Menu is open.'\n                },\n                {\n                    name: menuClass()('animation'),\n                    desc: 'Animation is enabled.'\n                },\n                {\n                    name:\n                        <ul>\n                            <li>{menuClass()('dir-left')}</li>\n                            <li>{menuClass()('dir-right')}</li>\n                            <li>{menuClass()('dir-top')}</li>\n                            <li>{menuClass()('dir-bottom')}</li>\n                        </ul>,\n                    desc: 'Direction in which the menu expands.'\n                }\n            ]\n        },\n\n        {\n            id: 'menu-item',\n            title: 'MenuItem',\n            rows: [\n                {\n                    name: menuItemClass(),\n                    desc: 'Menu item element.'\n                },\n                {\n                    name: menuItemClass('hover'),\n                    desc: 'Menu item is hovered and focused.'\n                },\n                {\n                    name: menuItemClass('active'),\n                    desc: 'Menu item is active (pressed).'\n                },\n                {\n                    name: menuItemClass('disabled'),\n                    desc: 'Menu item is disabled.'\n                },\n                {\n                    name: menuItemClass('anchor'),\n                    desc: 'Menu item is a URL link.'\n                },\n                {\n                    name: menuItemClass('checked'),\n                    desc: 'Menu item is checked (only for a radio or checkbox item).'\n                },\n                {\n                    name:\n                        <ul>\n                            <li>{menuItemClass('type-radio')}</li>\n                            <li>{menuItemClass('type-checkbox')}</li>\n                        </ul>,\n                    desc: 'Menu item is a radio or checkbox item.'\n                }\n            ]\n        },\n\n        {\n            id: 'others',\n            title: 'Other components',\n            rows: [\n                {\n                    name: menuClass('submenu')(),\n                    desc: 'SubMenu container element.'\n                },\n                {\n                    name: menuItemClass('open'),\n                    desc: 'SubMenu (item) is open.'\n                },\n                {\n                    name: menuClass('divider')(),\n                    desc: 'MenuDivider element.'\n                },\n                {\n                    name: menuClass('header')(),\n                    desc: 'MenuHeader element.'\n                },\n                {\n                    name: menuClass('radio-group')(),\n                    desc: 'MenuRadioGroup element.'\n                },\n                {\n                    name: '.rc-menu-button',\n                    desc: 'MenuButton element.'\n                }\n            ]\n        }\n    ]\n};\n\nconst classNameProp = {\n    id: 'class-name',\n    title: 'className prop',\n    desc:\n        <>\n            <p>This approach can be used to style a specific menu in the page differently.</p>\n            <p>Every component accepts a <code>className</code> prop which allows you to supply a custom CSS class.</p>\n            <p>Optionally, you may pass a function to the prop and receive additional states about the component.</p>\n            <p>For more details, please refer to the <code>className</code> prop under\n                each <Link to={'/docs#menu'}>component</Link>, or see\n                an <Link to={'/#classname-prop'}>example</Link> for its usage.</p>\n        </>\n}\n\nconst stylesSample = `{\n    color: 'green',\n    hover: {\n        color: 'red'\n    },\n    type: {\n        radio: {\n            color: 'blue'\n        },\n        checkbox: {\n            color: 'black'\n        }\n    }\n}`;\n\nconst stylesProp = {\n    id: 'styles',\n    title: 'styles prop',\n    desc:\n        <>\n            <p>This is another approach that can be used to style a specific menu in the page differently.</p>\n            <p>Every component accepts a <code>styles</code> prop as an object which allows you to add inline styles.\n            Regular styles are put in the object directly just like React's <code>style</code> prop, and styles which\n            are only applied to specific component states are written in nested objects under corresponding keys.</p>\n            <p>For example:</p>\n            <pre><code>{stylesSample}</code></pre>\n            <p><LibName /> will flatten the styles object by applying the properties from top to bottom,\n            with later properties overriding earlier ones of the same name.</p>\n            <p>Optionally, you may pass a function to the prop and receive states about the component.</p>\n            <p>For more details, please refer to the <code>styles</code> prop under\n                each <Link to={'/docs#menu'}>component</Link>, or see\n                an <Link to={'/#styles-prop'}>example</Link> for its usage.</p>\n        </>\n}\n\nexport default [stylesheet, classNameProp, stylesProp];\n","import React from 'react';\nimport { LibName } from '../components/LibName';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { ARIAPracticesLink } from '../components/ARIAPracticesLink';\n\n\nconst RETURN_KEY = '13(Return)';\nconst SPACE_KEY = '32(Space)';\nconst ESC_KEY = '27(Esc)';\n\nconst menuLink = <Link to={'#menu'}>Menu</Link>;\nconst menuButtonLink = <Link to={'#menu-button'}>MenuButton</Link>;\nconst controlledMenuLink = <Link to={'#controlled-menu'}>ControlledMenu</Link>;\nconst radioGroupLink = <Link to={'#radio-group'}>MenuRadioGroup</Link>;\nconst menuHeaderLink = <Link to={'#menu-header'}>MenuHeader</Link>;\nconst menuStateHookLink = <Link to={'#use-menu-state'}>useMenuState</Link>;\n\nconst menuModifiers = (\n    <ul>\n        <li><code>open: bool</code> indicates if the menu is open.</li>\n        <li><code>closing: bool</code> indicates if the menu is closing.\n            (Only <code>true</code> when animation is enabled and closing animation is playing)</li>\n        <li><code>animation: bool</code> indicates if animation is enabled.</li>\n        <li><code>dir: string</code> direction in which the menu expands. Can be 'left', 'right', 'top', or 'bottom'.</li>\n    </ul>\n);\n\nconst submenuModifiers = (\n    <ul>\n        <li><code>open: bool</code> indicates if the submenu is open.</li>\n        <li><code>hover: bool</code> indicates if the submenu item is being hovered and has focus.</li>\n        <li><code>active: bool</code> indicates if the submenu item is active (pressed).</li>\n        <li><code>disabled: bool</code> indicates if the submenu item is disabled.</li>\n    </ul>\n);\n\nconst menuItemModifiers = (\n    <ul>\n        <li><code>hover: bool</code> indicates if the menu item is being hovered and has focus.</li>\n        <li><code>active: bool</code> indicates if the menu item is active (pressed).</li>\n        <li><code>checked: bool</code> indicates if the menu item is checked if it's a radio or checkbox item.</li>\n        <li><code>disabled: bool</code> indicates if the menu item is disabled.</li>\n        <li><code>anchor: bool</code> indicates if the menu item has a URL link.</li>\n        <li><code>type: string</code> 'radio' in radio item, 'checkbox' in checkbox item,\n        or <code>undefined</code> in other items.</li>\n    </ul>\n);\n\nconst onClickEventObject = (\n    <>\n        <p>Event object properties:</p>\n        <ul>\n            <li><code>value: any</code> the value prop passed to the <code>MenuItem</code> being\n                clicked. It's useful for helping identify which menu item is clicked.</li>\n            <li><code>keyCode: number</code> indicates the key code if click is triggered by keyboard.\n                Can be <code>{RETURN_KEY}</code> or <code>{SPACE_KEY}</code>.</li>\n            <li><code>checked: bool</code> indicates if the menu item is checked, only\n                 for <code>MenuItem type=\"checkbox\"</code>.</li>\n        </ul>\n    </>\n);\n\nconst keepMountedProp = {\n    name: 'keepMounted',\n    type: 'boolean',\n    defaultVal: 'true',\n    desc: <>\n        <p>If <code>true</code>, menu keeps mounted in the DOM and is hidden by CSS\n            when it's closed. Otherwise, menu is unmounted from DOM when closed.</p>\n        <p>Setting this prop to <code>false</code> will result in unintended consequence of losing\n            menu close animation.</p>\n        <p>Please note menu won't be created and mounted into DOM until it's opened for the first time,\n            even if <code>keepMounted</code> is <code>true</code>.</p>\n    </>\n};\n\nconst menuChildrenProp = {\n    name: 'children',\n    type: 'node',\n    desc: <p>Can be <code>MenuDivider, MenuHeader, MenuItem,\n    MenuRadioGroup, SubMenu</code> or any of their combinations.</p>\n};\n\nconst onChangeProp = {\n    name: 'onChange',\n    type: 'function',\n    desc:\n        <>\n            <p>Event fired when menu open state has changed.</p>\n            <p>Event object properties:</p>\n            <ul>\n                <li><code>open: bool</code> indicates if the menu is open.</li>\n            </ul>\n        </>\n};\n\nconst styleProps = (target, modifiers, className, styles) => [\n    {\n        name: className || 'className',\n        type: `string${modifiers ? ' | function' : ''}`,\n        desc:\n            <>\n                <p>A string that will be appended to the <code>class</code> of <strong>{target}</strong> DOM element.</p>\n                {\n                    modifiers &&\n                    <>\n                        <p>When a function is provided, it will be called by passing an object with the\n                        following properties and should return a CSS class name.</p>\n                        {modifiers}\n                    </>\n                }\n            </>\n    },\n    {\n        name: styles || 'styles',\n        type: `object${modifiers ? ' | function' : ''}`,\n        desc:\n            <>\n                <p>A style object that will be applied to the inline style of <strong>{target}</strong> DOM element.</p>\n                {\n                    modifiers &&\n                    <>\n                        <p>Styles targeting specific component state should be supplied as nested objects\n                            under each key.</p>\n                        {modifiers}\n                        <p>When a function is provided, it will be called by passing an object with the\n                            above properties and should return a <em>flattened</em> style object.</p>\n                    </>\n                }\n            </>\n    }\n];\n\nconst menuPropsBase = [\n    ...styleProps('menu', menuModifiers),\n    menuChildrenProp,\n    {\n        name: 'id',\n        type: 'string | number',\n        desc:\n            <>\n                <p>Sets ID attribute on the root DOM element containing the menu.</p>\n                <p>It can be helpful when you need to style a specific menu differently\n                and use ID in your CSS selectors.</p>\n                <p>It also helps increase selector specificity when overriding the default style.</p>\n            </>\n    },\n\n    {\n        name: 'animation',\n        type: 'boolean',\n        defaultVal: 'true',\n        desc: <p>Enable or disable animation and transition effects in the <code>Menu</code>,\n        <code> MenuItem</code>, and any descendent <code>SubMenu</code>.</p>\n    },\n    {\n        name: 'debugging',\n        type: 'boolean',\n        desc:\n            <>\n                <p><em>Use this prop only when debugging.</em></p>\n                <p>If <code>true</code>, menu doesn't close when losing focus. It may be\n                helpful when you need to inspect and adjust styles in browser developer tools.</p>\n            </>\n    },\n    {\n        name: 'align',\n        type: 'string',\n        defaultVal: \"'start'\",\n        desc:\n            <>\n                <p>Can be 'start', 'center', or 'end'.</p>\n                <p>It sets alignment of menu with menu button.\n                    It has effect <strong>only</strong> when <code>direction</code> is\n                    set to 'top' or 'bottom'.</p>\n                <p>The alignment of menu is subject to the available viewport space and\n                menu position can be adjusted in order to have it contained within viewport.</p>\n            </>\n    },\n    {\n        name: 'direction',\n        type: 'string',\n        defaultVal: \"'bottom'\",\n        desc:\n            <>\n                <p>Can be 'left', 'right', 'top', or 'bottom'.</p>\n                <p>It sets direction in which menu expands against menu button.</p>\n                <p>Please note the actual direction in which menu expands is subject to the available viewport space.\n                If available space is not enough in the direction provided in this prop,\n                menu will attempt to expands in the opposite direction.\n                Menu position can also be adjusted in order to have it contained within viewport.</p>\n            </>\n    },\n    {\n        name: 'onClick',\n        type: 'function',\n        desc:\n            <>\n                <p>Event fired when descendent menu items are clicked.</p>\n                {onClickEventObject}\n            </>\n    }\n];\n\nconst menu = {\n    id: 'menu',\n    title: 'Menu',\n    desc:\n        <>\n            <p><code>Menu</code> is a top-level component that contains menu items and other lower level submenus.</p>\n            <p>Working with a {menuButtonLink} or a compatible button component, <code>Menu</code> manages states\n            which controls the display of its contents and maintains focus among its descendants.</p>\n            <p>It should be able to serve the majority of use cases. If you need more controls on how and\n                when a menu is open or closed, you might use a {controlledMenuLink}.</p>\n        </>,\n    rows: [\n        ...menuPropsBase,\n        keepMountedProp,\n        onChangeProp,\n        {\n            name: 'aria-label',\n            type: 'string',\n            desc:\n                <>\n                    <p>Sets <code>aria-label</code> attribute on the menu DOM element.</p>\n                    <p>If not provided, one will be generated from the string content of\n                        menu button, or the default 'Menu'.</p>\n                </>\n        },\n        {\n            name: 'menuButton',\n            type: 'element | function',\n            desc:\n                <>\n                    <p>Can be a {menuButtonLink}, a <code>button</code> element, or a React component.</p>\n                    <p>It also accepts a function that returns one of the above.\n                        The function will be called by passing an object with the following properties:</p>\n                    <ul>\n                        <li><code>open: bool</code> indicates if the menu is open.</li>\n                    </ul>\n                    <p>If a React component is provided, it needs to implement the following requirements:</p>\n                    <ul>\n                        <li><span>Accepts a </span><code>ref</code> prop that is forwarded to the element to which\n                        menu will be positioned. The element should be able to receive focus.</li>\n                        <li><span>Accepts </span><code>onClick</code> and <code>onKeyDown</code> event props.</li>\n                    </ul>\n                    <p>Please note {menuButtonLink} has one additional benefit that it has\n                    managed <code>aria-haspopup</code> and <code>aria-expanded</code> attributes.\n                    When using a <code>button</code> element or your own React component, it's your job\n                    to set these <code>aria</code> attributes if you need correct accessibility support.</p>\n                </>\n        }\n    ]\n};\n\nconst menuItem = {\n    id: 'menu-item',\n    title: 'MenuItem',\n    desc:\n        <>\n            <p><code>MenuItem</code> represents an item under a menu which can be activated.</p>\n            <p>It can a regular menu item, a checkbox item (<code>type=\"checkbox\"</code>),\n            or a radio item (direct child of {radioGroupLink}).</p>\n        </>,\n    rows: [\n        ...styleProps('menu item', menuItemModifiers),\n        {\n            name: 'value',\n            type: 'any',\n            desc:\n                <>\n                    <p>Any value provided to this prop will be included in the event object\n                        of the <code>onClick</code> event.</p>\n                    <p>It's useful for helping identify which menu item is clicked\n                        when you listen the event on <code>Menu</code> component.</p>\n                </>\n        },\n        {\n            name: 'href',\n            type: 'string',\n            desc: 'The URL that the menu item points to. If provided, a HTML <a> element will be used.'\n        },\n        {\n            name: 'type',\n            type: 'string',\n            desc: \"Set this prop to 'checkbox' to make it a checkbox menu item. Other values are ignored. Please note radio menu item doesn't use this prop.\"\n        },\n        {\n            name: 'checked',\n            type: 'boolean',\n            desc: <p>Set <code>true</code> if a checkbox menu item is checked. Please note radio menu item doesn't use this prop.</p>\n        },\n        {\n            name: 'disabled',\n            type: 'boolean',\n            desc: <p>Set <code>true</code> to disabled the menu item.</p>\n        },\n        {\n            name: 'children',\n            type: 'node | function',\n            desc:\n                <>\n                    <p>Contents of the menu item, or a function that returns it.\n                        The function will be called by passing an object with the following properties:</p>\n                    {menuItemModifiers}\n                </>\n        },\n        {\n            name: 'onClick',\n            type: 'function',\n            desc:\n                <>\n                    <p>Event fired when the menu item is clicked. The event will then bubble up to the root\n                        menu component. To stop bubbling, return <code>false</code> from the event handler.</p>\n                    {onClickEventObject}\n                    <p>Please note there is no <code>onClick</code> event on menu items under\n                    a {radioGroupLink}. Use <code>onChange</code> event on the group instead.</p>\n                </>\n        }\n    ]\n};\n\nconst submenu = {\n    id: 'submenu',\n    title: 'SubMenu',\n    desc:\n        <>\n            <p><code>SubMenu</code> is a menu container under other menu or submenu components.</p>\n            <p>It consists of a menu item and a sub-level menu contains submenu items.\n             Use <code>label</code> prop to set its own contents,\n             and place the submenu items it contains in the <code>children</code> prop.</p>\n        </>,\n    rows: [\n        ...styleProps('submenu item', submenuModifiers),\n        ...styleProps('submenu', menuModifiers, 'menuClassName', 'menuStyles'),\n        keepMountedProp,\n        menuChildrenProp,\n        onChangeProp,\n        {\n            name: 'aria-label',\n            type: 'string',\n            desc:\n                <>\n                    <p>Sets <code>aria-label</code> attribute on the submenu DOM element.</p>\n                    <p>If not provided, one will be generated from the string content\n                        of <code>label</code> prop, or the default 'Submenu'.</p>\n                </>\n        },\n        {\n            name: 'disabled',\n            type: 'boolean',\n            desc: <p>Set <code>true</code> to disabled the submenu item.</p>\n        },\n        {\n            name: 'label',\n            type: 'node | function',\n            desc:\n                <>\n                    <p>Contents of the submenu item, or a function that returns it.\n                        The function will be called by passing an object with the following properties:</p>\n                    {submenuModifiers}\n                </>\n        },\n    ]\n};\n\nconst menuButton = {\n    id: 'menu-button',\n    title: 'MenuButton',\n    desc: <p><code>MenuButton</code> works with a {menuLink} and controls its open and close.</p>,\n    rows: [\n        ...styleProps('menu button', <ul><li><code>open: bool</code> indicates if the menu is open.</li></ul>),\n        {\n            name: 'id',\n            type: 'string | number',\n            desc:\n                <p>Sets ID attribute on the menu button DOM element.</p>\n        },\n        {\n            name: 'disabled',\n            type: 'boolean',\n            desc: <p>Set <code>true</code> to disabled the menu button.</p>\n        },\n        {\n            name: 'children',\n            type: 'node',\n            desc: 'Contents of the menu button.'\n        },\n    ]\n};\n\nconst menuHeader = {\n    id: 'menu-header',\n    title: 'MenuHeader',\n    desc: <p><code>MenuHeader</code> can be used to provide a presentational information for a group of related menu items.</p>,\n    rows: [\n        ...styleProps('menu header'),\n        {\n            name: 'children',\n            type: 'node',\n            desc: 'Contents of the menu header. Can be anything that is usually for presentational purpose and not supposed to receive focus.'\n        },\n    ]\n};\n\nconst menuDivider = {\n    id: 'menu-divider',\n    title: 'MenuDivider',\n    desc: <p><code>MenuDivider</code> can be used to make a group of related menu items visually separated from other items.\n    It has <code>aria</code> roles that can be recognised by assistive technologies. If you need to put\n    something presentational in a menu, use a {menuHeaderLink} instead.</p>,\n    rows: [\n        ...styleProps('menu divider')\n    ]\n};\n\nconst menuRadioGroup = {\n    id: 'radio-group',\n    title: 'MenuRadioGroup',\n    desc:\n        <>\n            <p><code>MenuRadioGroup</code> is a container of menu items which are similar to radio buttons.</p>\n            <p>All menu items under a <code>MenuRadioGroup</code> are in the same radio group and\n            have <code>type=\"radio\"</code>. It's <strong>unnecessary</strong> to manually set the property. </p>\n        </>,\n    rows: [\n        ...styleProps('radio group'),\n        {\n            name: 'aria-label',\n            type: 'string',\n            desc:\n                <>\n                    <p>Sets <code>aria-label</code> attribute on the radio group DOM element.</p>\n                    <p>If not provided, it will be set as the value of <code>name</code> prop, or the default 'Radio group'.</p>\n                </>\n        },\n        {\n            name: 'name',\n            type: 'string',\n            desc:\n                <>\n                    <p>Sets the radio group name (optional).</p>\n                    <p>The name will be passed to the <code>onChange</code> event. It's useful for\n                    identifying radio groups if you attach the same event handler to multiple groups.</p>\n                </>\n        },\n        {\n            name: 'value',\n            type: 'any',\n            desc:\n                <>\n                    <p>Sets value of the radio group.</p>\n                    <p>The children menu item which has the same value (strict equality ===)\n                        as the radio group is marked as checked.</p>\n                </>\n        },\n        {\n            name: 'children',\n            type: 'node',\n            desc: <p>The only permitted children is <code>MenuItem</code>.</p>\n        },\n        {\n            name: 'onChange',\n            type: 'function',\n            desc:\n                <>\n                    <p>Event fired when a children menu item is clicked (selected).</p>\n                    <p>Event object properties:</p>\n                    <ul>\n                        <li><code>name: string</code> the name prop passed to the <code>MenuRadioGroup</code> on which this event occurred.</li>\n                        <li><code>value: any</code> the value prop passed to the <code>MenuItem</code> being clicked.</li>\n                        <li><code>keyCode: number</code> indicates the key code if click is triggered by keyboard.\n                        Can be <code>{RETURN_KEY}</code> or <code>{SPACE_KEY}</code>.</li>\n                    </ul>\n                </>\n        }\n    ]\n};\n\nconst controlledMenu = {\n    id: 'controlled-menu',\n    title: 'ControlledMenu',\n    desc:\n        <>\n            <p><code>ControlledMenu</code> is a top-level component that contains menu items and other lower level submenus.</p>\n            <p>It's different from a {menuLink} that <code>ControlledMenu</code> allows you to control how and when\n            a menu is open or closed, rather than controlled by a menu button.</p>\n            <p>For example, you might need to open a menu when something on the page is hovered by a mouse, or\n            you need to position the menu to something other than the menu button. <code>ControlledMenu</code> can\n            be also use to implement a <Link to={'/#context-menu'}>context menu</Link>.</p>\n            <p>When using <code>ControlledMenu</code>, it's your job to set focus to the desirable item after menu opens\n            and move focus back to your menu button after it closes, which can be done by setting <code>menuItemFocus</code>, and in\n            the <code>onClose</code> event, respectively. However, depending on your requirements, both of them might be optional.</p>\n        </>,\n    rows: [\n        ...menuPropsBase,\n        {\n            name: 'aria-label',\n            type: 'string',\n            desc:\n                <>\n                    <p>Sets <code>aria-label</code> attribute on the menu DOM element.</p>\n                    <p>If not provided, it will be set as 'Menu'.</p>\n                </>\n        },\n        {\n            name: 'anchorPoint',\n            type: 'object',\n            desc:\n                <>\n                    <p><em>Use this prop only for context menu.</em> See an <Link to={'/#context-menu'}>example</Link>.</p>\n                    <p>An object describes viewport coordinates to which context menu will be positioned.</p>\n                    <p>It's an object with the shape of <code>{'{ x: number, y: number }'}</code>.</p>\n                </>\n        },\n        {\n            name: 'anchorRef',\n            type: 'object',\n            desc:\n                <>\n                    <p>A ref object attached to a DOM element to which menu will be positioned. <em>Not needed for context menu.</em></p>\n                    <p>Supports ref created by <code>React.createRef</code> or <code>useRef</code> Hook.\n                     Doesn't support callback ref.</p>\n                </>\n        },\n        {\n            name: 'isOpen',\n            type: 'boolean',\n            desc: 'Controls whether the menu is open or not.'\n        },\n        {\n            name: 'isMounted',\n            type: 'boolean',\n            defaultVal: 'true',\n            desc:\n                <>\n                    <p>Controls whether the menu is mounted or not.</p>\n                    <p>Can be used to unmount menu when it's closed.\n                        Recommend using this prop with {menuStateHookLink}.</p>\n                </>\n        },\n        {\n            name: 'menuItemFocus',\n            type: 'object',\n            desc:\n                <>\n                    <p>Sets which menu item receives focus (hover) when menu opens.</p>\n                    <p>You will usually set this prop when the menu is opened by keyboard events.\n                        Recommend using this prop with {menuStateHookLink}.</p>\n                    <p>It's an object with the shape of <code>{'{ position: string }'}</code>. The <code>position</code> can be one of the following values:</p>\n                    <ul>\n                        <li><code>'initial'</code> don't set focus.</li>\n                        <li><code>'first'</code> focus the first item in the menu.</li>\n                        <li><code>'last'</code> focus the last item in the menu.</li>\n                    </ul>\n                </>\n        },\n        {\n            name: 'onClose',\n            type: 'function',\n            desc:\n                <>\n                    <p>Event fired when menu is about to close.</p>\n                    <p>Event object properties:</p>\n                    <ul>\n                        <li><code>reason: string</code> The reason that causes the close event.\n                        Can be 'click', 'cancel', or 'blur'.</li>\n                        <li><code>keyCode: number</code> indicates the key code if event is triggered by keyboard.\n                        Can be <code>{RETURN_KEY}, {SPACE_KEY}</code> or <code>{ESC_KEY}</code>.</li>\n                    </ul>\n                </>\n        }\n    ]\n};\n\nconst menuStateHook = {\n    id: 'use-menu-state',\n    title: 'useMenuState',\n    desc:\n        <>\n            <p><code>useMenuState</code> is a custom Hook that helps manage the states of {controlledMenuLink}.</p>\n            <p>The Hook returns several states which are used by <code>ControlledMenu</code> and can be spread to its props. See an <Link to={'/#use-menu-state'}>example</Link>.</p>\n            <p>It accepts a boolean parameter <code>keepMounted</code>. If <code>true</code>, menu keeps\n            mounted in the DOM and is hidden by CSS when it's closed. Otherwise, menu is unmounted from DOM when closed. The default value is <code>true</code>.</p>\n            <p>It returns an object with the following properties:</p>\n            <ul>\n                <li><code>isMounted: bool</code></li>\n                <li><code>isOpen: bool</code></li>\n                <li><code>menuItemFocus: bool</code> see {controlledMenuLink} for more details of these properties.</li>\n                <li><code>openMenu: function</code> accepts 'initial', 'first', or 'last'.\n                <br />E.g. <code>openMenu('first')</code> will open menu and set focus to the first menu item.</li>\n                <li><code>closeMenu: function</code></li>\n                <li><code>toggleMenu: function</code> accepts the same parameter as <code>openMenu</code>.</li>\n            </ul>\n            <p>Using this Hook can take advantage of lazily creating menu and its descendent items, which means menu is\n            not created and mounted into DOM until it's opened for the first time.\n            The {menuLink} component uses this hook internally to manage its states.</p>\n        </>\n};\n\nconst keyboard = {\n    id: 'keyboard',\n    title: 'Keyboard',\n    desc:\n        <>\n            <p><LibName /> supports the following keyboard interactions:</p>\n            <h3>Menu</h3>\n            <ul className=\"keyboard\">\n                <li><span>Return</span> activates a menu item and closes the menu.</li>\n                <li><span>Space</span> activates a menu item and closes the menu; for radio and checkbox item, activates the menu item without closing the menu.</li>\n                <li><span>Down Arrow</span> moves focus to the next item, wrapping from the last to the first.</li>\n                <li><span>Up Arrow</span> moves focus to the previous item, wrapping from the first to the last.</li>\n                <li><span>Right Arrow</span> When focus is in a submenu item, opens the submenu, and moves focus to the first menu item.</li>\n                <li><span>Left Arrow</span> Closes a submenu if it is open.</li>\n                <li><span>Esc</span> Closes a menu and move focus to its associated menu button.</li>\n            </ul>\n            <h3>MenuButton</h3>\n            <ul className=\"keyboard\">\n                <li><span>Return | Space</span> opens the associated menu.</li>\n                <li><span>Down Arrow</span> opens the associated menu and moves focus to the first menu item.</li>\n                <li><span>Up Arrow</span> opens the associated menu and moves focus to the last menu item.</li>\n            </ul>\n        </>\n}\n\nconst components = {\n    id: 'components',\n    title: 'Components',\n    list: [\n        menu,\n        menuItem,\n        menuButton,\n        submenu,\n        menuRadioGroup,\n        menuHeader,\n        menuDivider,\n        controlledMenu\n    ]\n};\n\nconst hooks = {\n    id: 'hooks',\n    title: 'Hooks',\n    list: [\n        menuStateHook,\n    ]\n};\n\nconst accessibility = {\n    id: 'accessibility',\n    title: 'Accessibility',\n    desc:\n        <p><LibName /> supports <code>aria</code> roles, states, and properties which aims to fully comply with\n            the <ARIAPracticesLink />. For more details, please refer to the website.</p>,\n    list: [\n        keyboard\n    ]\n};\n\nexport default [components, hooks, accessibility];\n","import React from 'react';\nimport { HashHeading } from './HashHeading';\n\nexport const DocSection = React.memo(function DocSection({\n    id,\n    title,\n    desc,\n    rows\n}) {\n\n    return (\n        <section className=\"api-doc\" aria-labelledby={id}>\n            <HashHeading id={id} title={title} heading=\"h2\" />\n            {desc}\n            {rows &&\n                <>\n                    <h3>Props</h3>\n                    <table className=\"table table-striped table-bordered\">\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Type</th>\n                                <th scope=\"col\">Default</th>\n                                <th scope=\"col\">Description</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                rows\n                                    .sort(({ name: n1 }, { name: n2 }) => {\n                                        if (n1 < n2) {\n                                            return -1;\n                                        }\n                                        if (n1 > n2) {\n                                            return 1;\n                                        }\n                                        return 0;\n                                    })\n                                    .map(({ name, type, defaultVal, desc }) => (\n                                        <tr key={name}>\n                                            <td>{name}</td>\n                                            <td>{type}</td>\n                                            <td>{defaultVal}</td>\n                                            <td>{desc}</td>\n                                        </tr>\n                                    ))\n                            }\n                        </tbody>\n                    </table>\n                </>}\n        </section>\n    );\n});\n","import React from 'react';\nimport data from '../data/documentation';\nimport { HashHeading } from './HashHeading';\nimport { TableContents } from './TableContents';\nimport { DocSection } from './DocSection';\n\n\nexport const Docs = React.memo(function Docs() {\n\n    return (\n        <React.Fragment>\n            <TableContents>\n                {data}\n            </TableContents>\n\n            <main id=\"documentation\">\n                {data.map(({ id, title, desc, list }) => (\n                    <React.Fragment key={id}>\n                        <HashHeading id={id} title={title} />\n                        {desc}\n                        {list.map(item => <DocSection key={item.id} {...item} />)}\n                    </React.Fragment>\n                ))}\n            </main >\n\n            <div className=\"place-holder\" role=\"presentation\" />\n        </React.Fragment>\n    );\n});\n","import React from 'react';\nimport { HashHeading } from './HashHeading';\n\nexport const StyleSection = React.memo(function StyleSection({\n    id,\n    title,\n    desc,\n    rows\n}) {\n\n    return (\n        <section className=\"style-doc\" aria-labelledby={id}>\n            <HashHeading id={id} title={title} heading=\"h2\" />\n            {desc}\n            {rows &&\n                <>\n                    <table className=\"table table-striped table-bordered\">\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th scope=\"col\">CSS selectors</th>\n                                <th scope=\"col\">Description</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                rows.map(({ name, desc }) => (\n                                    <tr key={name}>\n                                        <td>{name}</td>\n                                        <td>{desc}</td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </>}\n        </section>\n    );\n});\n","import React from 'react';\nimport data from '../data/styleGuide';\nimport { HashHeading } from './HashHeading';\nimport { TableContents } from './TableContents';\nimport { StyleSection } from './StyleSection';\n\n\nexport const StyleGuide = React.memo(function StyleGuide() {\n\n    return (\n        <React.Fragment>\n            <TableContents>\n                {data}\n            </TableContents>\n\n            <main id=\"style-guide\">\n                {data.map(({ id, title, desc, list }) => (\n                    <React.Fragment key={id}>\n                        <HashHeading id={id} title={title} />\n                        {desc}\n                        {list && list.map(item => <StyleSection key={item.id} {...item} />)}\n                    </React.Fragment>\n                ))}\n            </main >\n\n            <div className=\"place-holder\" role=\"presentation\" />\n        </React.Fragment>\n    );\n});\n","import React from 'react';\n\nexport const NotFound = React.memo(function NotFound() {\n\n    return (\n        <>\n            {/* place holder for maintaining page structure */}\n            <div className=\"table-contents\" role=\"presentation\" />\n\n            <main id=\"not-found\">\n                <h1>Page not found</h1>\n            </main>\n\n            <div className=\"place-holder\" role=\"presentation\" />\n        </>\n    );\n});\n","import React, { useEffect } from 'react';\nimport {\n    Switch,\n    Route,\n    useLocation\n} from 'react-router-dom';\nimport { Usage } from './Usage';\nimport { Docs } from './Docs';\nimport { StyleGuide } from './StyleGuide';\nimport { NotFound } from './NotFound';\n\n\nexport const PageContent = React.memo(function PageContent() {\n\n    const location = useLocation();\n    useEffect(() => {\n        if (!location.hash) window.scrollTo(0, 0);\n    }, [location]);\n\n    return (\n        <div id=\"content\">\n            <Switch>\n                <Route exact path=\"/\">\n                    <Usage />\n                </Route>\n                <Route path=\"/docs\">\n                    <Docs />\n                </Route>\n                <Route path=\"/style-guide\">\n                    <StyleGuide />\n                </Route>\n                <Route>\n                    <NotFound />\n                </Route>\n            </Switch>\n        </div>\n    );\n});\n","import React from 'react';\n\nexport const Footer = React.memo(function Footer() {\n\n    return (\n        <footer id=\"footer\">\n            Released under the MIT License. <br />Copyright © 2020 Zheng Song.\n        </footer>\n    );\n});\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { DomInfoContext, ToastContext } from './utils';\nimport { Header } from './components/Header';\nimport { PageContent } from './components/PageContent';\nimport { Footer } from './components/Footer';\n\n\nconst App = () => {\n    const [domInfo, setDomInfo] = useState({});\n    useEffect(() => {\n        const handleResize = () => {\n            const info = {\n                // Viewport size\n                vWidth: document.documentElement.clientWidth,\n                vHeight: document.documentElement.clientHeight,\n\n                navbarHeight: document.querySelector('#header .navbar').offsetHeight,\n                // Table of Contents position\n                tocPosition: getComputedStyle(document.querySelector('.table-contents'))\n                    .getPropertyValue('position')\n            };\n\n            setDomInfo(info);\n        }\n\n        handleResize();\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n\n    const [toast, setToast] = useState(null);\n    useEffect(() => {\n        if (!toast) return;\n        const id = setTimeout(() => setToast(null), 2500);\n        return () => clearTimeout(id);\n    }, [toast]);\n\n    return (\n        <DomInfoContext.Provider value={domInfo}>\n            <ToastContext.Provider value={setToast}>\n                <Router basename=\"/react-menu\">\n                    <Header />\n                    <PageContent />\n                    <Footer />\n                    {toast && <div className=\"app-toast\" role=\"alert\">{toast}</div>}\n                </Router>\n            </ToastContext.Provider>\n        </DomInfoContext.Provider>\n    );\n}\n\nexport default App;\n","import 'highlight.js/styles/agate.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap';\nimport '@szhsin/react-menu/dist/index.css';\nimport './styles/index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}